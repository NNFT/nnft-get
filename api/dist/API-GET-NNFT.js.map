{"version":3,"file":"API-GET-NNFT.js","mappings":"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","sources":["webpack://sls/webpack/universalModuleDefinition","webpack://sls/./node_modules/base32.js/base32.js","webpack://sls/./node_modules/base64-js/index.js","webpack://sls/./node_modules/buffer/index.js","webpack://sls/./node_modules/convert-hex/convert-hex.js","webpack://sls/./node_modules/convert-string/convert-string.js","webpack://sls/./node_modules/ieee754/index.js","webpack://sls/./node_modules/sha256/lib/sha256.js","webpack://sls/./node_modules/tweetnacl/nacl-fast.js","webpack://sls/webpack/bootstrap","webpack://sls/webpack/runtime/make namespace object","webpack://sls/./src/api-get-nnft.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"sls\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"sls\"] = factory();\n\telse\n\t\troot[\"sls\"] = factory();\n})(this, function() {\nreturn ","\"use strict\";\n\n/**\n * Generate a character map.\n * @param {string} alphabet e.g. \"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567\"\n * @param {object} mappings map overrides from key to value\n * @method\n */\n\nvar charmap = function (alphabet, mappings) {\n  mappings || (mappings = {});\n  alphabet.split(\"\").forEach(function (c, i) {\n    if (!(c in mappings)) mappings[c] = i;\n  });\n  return mappings;\n}\n\n/**\n * The RFC 4648 base 32 alphabet and character map.\n * @see {@link https://tools.ietf.org/html/rfc4648}\n */\n\nvar rfc4648 = {\n  alphabet: \"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567\",\n  charmap: {\n    0: 14,\n    1: 8\n  }\n};\n\nrfc4648.charmap = charmap(rfc4648.alphabet, rfc4648.charmap);\n\n/**\n * The Crockford base 32 alphabet and character map.\n * @see {@link http://www.crockford.com/wrmg/base32.html}\n */\n\nvar crockford = {\n  alphabet: \"0123456789ABCDEFGHJKMNPQRSTVWXYZ\",\n  charmap: {\n    O: 0,\n    I: 1,\n    L: 1\n  }\n};\n\ncrockford.charmap = charmap(crockford.alphabet, crockford.charmap);\n\n/**\n * base32hex\n * @see {@link https://en.wikipedia.org/wiki/Base32#base32hex}\n */\n\nvar base32hex = {\n  alphabet: \"0123456789ABCDEFGHIJKLMNOPQRSTUV\",\n  charmap: {}\n};\n\nbase32hex.charmap = charmap(base32hex.alphabet, base32hex.charmap);\n\n/**\n * Create a new `Decoder` with the given options.\n *\n * @param {object} [options]\n *   @param {string} [type] Supported Base-32 variants are \"rfc4648\" and\n *     \"crockford\".\n *   @param {object} [charmap] Override the character map used in decoding.\n * @constructor\n */\n\nfunction Decoder (options) {\n  this.buf = [];\n  this.shift = 8;\n  this.carry = 0;\n\n  if (options) {\n\n    switch (options.type) {\n      case \"rfc4648\":\n        this.charmap = exports.rfc4648.charmap;\n        break;\n      case \"crockford\":\n        this.charmap = exports.crockford.charmap;\n        break;\n      case \"base32hex\":\n        this.charmap = exports.base32hex.charmap;\n        break;\n      default:\n        throw new Error(\"invalid type\");\n    }\n\n    if (options.charmap) this.charmap = options.charmap;\n  }\n}\n\n/**\n * The default character map coresponds to RFC4648.\n */\n\nDecoder.prototype.charmap = rfc4648.charmap;\n\n/**\n * Decode a string, continuing from the previous state.\n *\n * @param {string} str\n * @return {Decoder} this\n */\n\nDecoder.prototype.write = function (str) {\n  var charmap = this.charmap;\n  var buf = this.buf;\n  var shift = this.shift;\n  var carry = this.carry;\n\n  // decode string\n  str.toUpperCase().split(\"\").forEach(function (char) {\n\n    // ignore padding\n    if (char == \"=\") return;\n\n    // lookup symbol\n    var symbol = charmap[char] & 0xff;\n\n    // 1: 00000 000\n    // 2:          00 00000 0\n    // 3:                    0000 0000\n    // 4:                             0 00000 00\n    // 5:                                       000 00000\n    // 6:                                                00000 000\n    // 7:                                                         00 00000 0\n\n    shift -= 5;\n    if (shift > 0) {\n      carry |= symbol << shift;\n    } else if (shift < 0) {\n      buf.push(carry | (symbol >> -shift));\n      shift += 8;\n      carry = (symbol << shift) & 0xff;\n    } else {\n      buf.push(carry | symbol);\n      shift = 8;\n      carry = 0;\n    }\n  });\n\n  // save state\n  this.shift = shift;\n  this.carry = carry;\n\n  // for chaining\n  return this;\n};\n\n/**\n * Finish decoding.\n *\n * @param {string} [str] The final string to decode.\n * @return {Array} Decoded byte array.\n */\n\nDecoder.prototype.finalize = function (str) {\n  if (str) {\n    this.write(str);\n  }\n  if (this.shift !== 8 && this.carry !== 0) {\n    this.buf.push(this.carry);\n    this.shift = 8;\n    this.carry = 0;\n  }\n  return this.buf;\n};\n\n/**\n * Create a new `Encoder` with the given options.\n *\n * @param {object} [options]\n *   @param {string} [type] Supported Base-32 variants are \"rfc4648\" and\n *     \"crockford\".\n *   @param {object} [alphabet] Override the alphabet used in encoding.\n * @constructor\n */\n\nfunction Encoder (options) {\n  this.buf = \"\";\n  this.shift = 3;\n  this.carry = 0;\n\n  if (options) {\n\n    switch (options.type) {\n      case \"rfc4648\":\n        this.alphabet = exports.rfc4648.alphabet;\n        break;\n      case \"crockford\":\n        this.alphabet = exports.crockford.alphabet;\n        break;\n      case \"base32hex\":\n        this.alphabet = exports.base32hex.alphabet;\n        break;\n      default:\n        throw new Error(\"invalid type\");\n    }\n\n    if (options.alphabet) this.alphabet = options.alphabet;\n    else if (options.lc) this.alphabet = this.alphabet.toLowerCase();\n  }\n}\n\n/**\n * The default alphabet coresponds to RFC4648.\n */\n\nEncoder.prototype.alphabet = rfc4648.alphabet;\n\n/**\n * Encode a byte array, continuing from the previous state.\n *\n * @param {byte[]} buf The byte array to encode.\n * @return {Encoder} this\n */\n\nEncoder.prototype.write = function (buf) {\n  var shift = this.shift;\n  var carry = this.carry;\n  var symbol;\n  var byte;\n  var i;\n\n  // encode each byte in buf\n  for (i = 0; i < buf.length; i++) {\n    byte = buf[i];\n\n    // 1: 00000 000\n    // 2:          00 00000 0\n    // 3:                    0000 0000\n    // 4:                             0 00000 00\n    // 5:                                       000 00000\n    // 6:                                                00000 000\n    // 7:                                                         00 00000 0\n\n    symbol = carry | (byte >> shift);\n    this.buf += this.alphabet[symbol & 0x1f];\n\n    if (shift > 5) {\n      shift -= 5;\n      symbol = byte >> shift;\n      this.buf += this.alphabet[symbol & 0x1f];\n    }\n\n    shift = 5 - shift;\n    carry = byte << shift;\n    shift = 8 - shift;\n  }\n\n  // save state\n  this.shift = shift;\n  this.carry = carry;\n\n  // for chaining\n  return this;\n};\n\n/**\n * Finish encoding.\n *\n * @param {byte[]} [buf] The final byte array to encode.\n * @return {string} The encoded byte array.\n */\n\nEncoder.prototype.finalize = function (buf) {\n  if (buf) {\n    this.write(buf);\n  }\n  if (this.shift !== 3) {\n    this.buf += this.alphabet[this.carry & 0x1f];\n    this.shift = 3;\n    this.carry = 0;\n  }\n  return this.buf;\n};\n\n/**\n * Convenience encoder.\n *\n * @param {byte[]} buf The byte array to encode.\n * @param {object} [options] Options to pass to the encoder.\n * @return {string} The encoded string.\n */\n\nexports.encode = function (buf, options) {\n  return new Encoder(options).finalize(buf);\n};\n\n/**\n * Convenience decoder.\n *\n * @param {string} str The string to decode.\n * @param {object} [options] Options to pass to the decoder.\n * @return {byte[]} The decoded byte array.\n */\n\nexports.decode = function (str, options) {\n  return new Decoder(options).finalize(str);\n};\n\n// Exports.\nexports.Decoder = Decoder;\nexports.Encoder = Encoder;\nexports.charmap = charmap;\nexports.crockford = crockford;\nexports.rfc4648 = rfc4648;\nexports.base32hex = base32hex;\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n","!function(globals) {\n'use strict'\n\nvar convertHex = {\n  bytesToHex: function(bytes) {\n    /*if (typeof bytes.byteLength != 'undefined') {\n      var newBytes = []\n\n      if (typeof bytes.buffer != 'undefined')\n        bytes = new DataView(bytes.buffer)\n      else\n        bytes = new DataView(bytes)\n\n      for (var i = 0; i < bytes.byteLength; ++i) {\n        newBytes.push(bytes.getUint8(i))\n      }\n      bytes = newBytes\n    }*/\n    return arrBytesToHex(bytes)\n  },\n  hexToBytes: function(hex) {\n    if (hex.length % 2 === 1) throw new Error(\"hexToBytes can't have a string with an odd number of characters.\")\n    if (hex.indexOf('0x') === 0) hex = hex.slice(2)\n    return hex.match(/../g).map(function(x) { return parseInt(x,16) })\n  }\n}\n\n\n// PRIVATE\n\nfunction arrBytesToHex(bytes) {\n  return bytes.map(function(x) { return padLeft(x.toString(16),2) }).join('')\n}\n\nfunction padLeft(orig, len) {\n  if (orig.length > len) return orig\n  return Array(len - orig.length + 1).join('0') + orig\n}\n\n\nif (typeof module !== 'undefined' && module.exports) { //CommonJS\n  module.exports = convertHex\n} else {\n  globals.convertHex = convertHex\n}\n\n}(this);","!function(globals) {\n'use strict'\n\nvar convertString = {\n  bytesToString: function(bytes) {\n    return bytes.map(function(x){ return String.fromCharCode(x) }).join('')\n  },\n  stringToBytes: function(str) {\n    return str.split('').map(function(x) { return x.charCodeAt(0) })\n  }\n}\n\n//http://hossa.in/2012/07/20/utf-8-in-javascript.html\nconvertString.UTF8 = {\n   bytesToString: function(bytes) {\n    return decodeURIComponent(escape(convertString.bytesToString(bytes)))\n  },\n  stringToBytes: function(str) {\n   return convertString.stringToBytes(unescape(encodeURIComponent(str)))\n  }\n}\n\nif (typeof module !== 'undefined' && module.exports) { //CommonJS\n  module.exports = convertString\n} else {\n  globals.convertString = convertString\n}\n\n}(this);","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","!function(globals) {\n'use strict'\n\nvar _imports = {}\n\nif (typeof module !== 'undefined' && module.exports) { //CommonJS\n  _imports.bytesToHex = require('convert-hex').bytesToHex\n  _imports.convertString = require('convert-string')\n  module.exports = sha256\n} else {\n  _imports.bytesToHex = globals.convertHex.bytesToHex\n  _imports.convertString = globals.convertString\n  globals.sha256 = sha256\n}\n\n/*\nCryptoJS v3.1.2\ncode.google.com/p/crypto-js\n(c) 2009-2013 by Jeff Mott. All rights reserved.\ncode.google.com/p/crypto-js/wiki/License\n*/\n\n// Initialization round constants tables\nvar K = []\n\n// Compute constants\n!function () {\n  function isPrime(n) {\n    var sqrtN = Math.sqrt(n);\n    for (var factor = 2; factor <= sqrtN; factor++) {\n      if (!(n % factor)) return false\n    }\n\n    return true\n  }\n\n  function getFractionalBits(n) {\n    return ((n - (n | 0)) * 0x100000000) | 0\n  }\n\n  var n = 2\n  var nPrime = 0\n  while (nPrime < 64) {\n    if (isPrime(n)) {\n      K[nPrime] = getFractionalBits(Math.pow(n, 1 / 3))\n      nPrime++\n    }\n\n    n++\n  }\n}()\n\nvar bytesToWords = function (bytes) {\n  var words = []\n  for (var i = 0, b = 0; i < bytes.length; i++, b += 8) {\n    words[b >>> 5] |= bytes[i] << (24 - b % 32)\n  }\n  return words\n}\n\nvar wordsToBytes = function (words) {\n  var bytes = []\n  for (var b = 0; b < words.length * 32; b += 8) {\n    bytes.push((words[b >>> 5] >>> (24 - b % 32)) & 0xFF)\n  }\n  return bytes\n}\n\n// Reusable object\nvar W = []\n\nvar processBlock = function (H, M, offset) {\n  // Working variables\n  var a = H[0], b = H[1], c = H[2], d = H[3]\n  var e = H[4], f = H[5], g = H[6], h = H[7]\n\n    // Computation\n  for (var i = 0; i < 64; i++) {\n    if (i < 16) {\n      W[i] = M[offset + i] | 0\n    } else {\n      var gamma0x = W[i - 15]\n      var gamma0  = ((gamma0x << 25) | (gamma0x >>> 7))  ^\n                    ((gamma0x << 14) | (gamma0x >>> 18)) ^\n                    (gamma0x >>> 3)\n\n      var gamma1x = W[i - 2];\n      var gamma1  = ((gamma1x << 15) | (gamma1x >>> 17)) ^\n                    ((gamma1x << 13) | (gamma1x >>> 19)) ^\n                    (gamma1x >>> 10)\n\n      W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16];\n    }\n\n    var ch  = (e & f) ^ (~e & g);\n    var maj = (a & b) ^ (a & c) ^ (b & c);\n\n    var sigma0 = ((a << 30) | (a >>> 2)) ^ ((a << 19) | (a >>> 13)) ^ ((a << 10) | (a >>> 22));\n    var sigma1 = ((e << 26) | (e >>> 6)) ^ ((e << 21) | (e >>> 11)) ^ ((e << 7)  | (e >>> 25));\n\n    var t1 = h + sigma1 + ch + K[i] + W[i];\n    var t2 = sigma0 + maj;\n\n    h = g;\n    g = f;\n    f = e;\n    e = (d + t1) | 0;\n    d = c;\n    c = b;\n    b = a;\n    a = (t1 + t2) | 0;\n  }\n\n  // Intermediate hash value\n  H[0] = (H[0] + a) | 0;\n  H[1] = (H[1] + b) | 0;\n  H[2] = (H[2] + c) | 0;\n  H[3] = (H[3] + d) | 0;\n  H[4] = (H[4] + e) | 0;\n  H[5] = (H[5] + f) | 0;\n  H[6] = (H[6] + g) | 0;\n  H[7] = (H[7] + h) | 0;\n}\n\nfunction sha256(message, options) {;\n  if (message.constructor === String) {\n    message = _imports.convertString.UTF8.stringToBytes(message);\n  }\n\n  var H =[ 0x6A09E667, 0xBB67AE85, 0x3C6EF372, 0xA54FF53A,\n           0x510E527F, 0x9B05688C, 0x1F83D9AB, 0x5BE0CD19 ];\n\n  var m = bytesToWords(message);\n  var l = message.length * 8;\n\n  m[l >> 5] |= 0x80 << (24 - l % 32);\n  m[((l + 64 >> 9) << 4) + 15] = l;\n\n  for (var i=0 ; i<m.length; i += 16) {\n    processBlock(H, m, i);\n  }\n\n  var digestbytes = wordsToBytes(H);\n  return options && options.asBytes ? digestbytes :\n         options && options.asString ? _imports.convertString.bytesToString(digestbytes) :\n         _imports.bytesToHex(digestbytes)\n}\n\nsha256.x2 = function(message, options) {\n  return sha256(sha256(message, { asBytes:true }), options)\n}\n\n}(this);\n","(function(nacl) {\n'use strict';\n\n// Ported in 2014 by Dmitry Chestnykh and Devi Mandiri.\n// Public domain.\n//\n// Implementation derived from TweetNaCl version 20140427.\n// See for details: http://tweetnacl.cr.yp.to/\n\nvar gf = function(init) {\n  var i, r = new Float64Array(16);\n  if (init) for (i = 0; i < init.length; i++) r[i] = init[i];\n  return r;\n};\n\n//  Pluggable, initialized in high-level API below.\nvar randombytes = function(/* x, n */) { throw new Error('no PRNG'); };\n\nvar _0 = new Uint8Array(16);\nvar _9 = new Uint8Array(32); _9[0] = 9;\n\nvar gf0 = gf(),\n    gf1 = gf([1]),\n    _121665 = gf([0xdb41, 1]),\n    D = gf([0x78a3, 0x1359, 0x4dca, 0x75eb, 0xd8ab, 0x4141, 0x0a4d, 0x0070, 0xe898, 0x7779, 0x4079, 0x8cc7, 0xfe73, 0x2b6f, 0x6cee, 0x5203]),\n    D2 = gf([0xf159, 0x26b2, 0x9b94, 0xebd6, 0xb156, 0x8283, 0x149a, 0x00e0, 0xd130, 0xeef3, 0x80f2, 0x198e, 0xfce7, 0x56df, 0xd9dc, 0x2406]),\n    X = gf([0xd51a, 0x8f25, 0x2d60, 0xc956, 0xa7b2, 0x9525, 0xc760, 0x692c, 0xdc5c, 0xfdd6, 0xe231, 0xc0a4, 0x53fe, 0xcd6e, 0x36d3, 0x2169]),\n    Y = gf([0x6658, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666]),\n    I = gf([0xa0b0, 0x4a0e, 0x1b27, 0xc4ee, 0xe478, 0xad2f, 0x1806, 0x2f43, 0xd7a7, 0x3dfb, 0x0099, 0x2b4d, 0xdf0b, 0x4fc1, 0x2480, 0x2b83]);\n\nfunction ts64(x, i, h, l) {\n  x[i]   = (h >> 24) & 0xff;\n  x[i+1] = (h >> 16) & 0xff;\n  x[i+2] = (h >>  8) & 0xff;\n  x[i+3] = h & 0xff;\n  x[i+4] = (l >> 24)  & 0xff;\n  x[i+5] = (l >> 16)  & 0xff;\n  x[i+6] = (l >>  8)  & 0xff;\n  x[i+7] = l & 0xff;\n}\n\nfunction vn(x, xi, y, yi, n) {\n  var i,d = 0;\n  for (i = 0; i < n; i++) d |= x[xi+i]^y[yi+i];\n  return (1 & ((d - 1) >>> 8)) - 1;\n}\n\nfunction crypto_verify_16(x, xi, y, yi) {\n  return vn(x,xi,y,yi,16);\n}\n\nfunction crypto_verify_32(x, xi, y, yi) {\n  return vn(x,xi,y,yi,32);\n}\n\nfunction core_salsa20(o, p, k, c) {\n  var j0  = c[ 0] & 0xff | (c[ 1] & 0xff)<<8 | (c[ 2] & 0xff)<<16 | (c[ 3] & 0xff)<<24,\n      j1  = k[ 0] & 0xff | (k[ 1] & 0xff)<<8 | (k[ 2] & 0xff)<<16 | (k[ 3] & 0xff)<<24,\n      j2  = k[ 4] & 0xff | (k[ 5] & 0xff)<<8 | (k[ 6] & 0xff)<<16 | (k[ 7] & 0xff)<<24,\n      j3  = k[ 8] & 0xff | (k[ 9] & 0xff)<<8 | (k[10] & 0xff)<<16 | (k[11] & 0xff)<<24,\n      j4  = k[12] & 0xff | (k[13] & 0xff)<<8 | (k[14] & 0xff)<<16 | (k[15] & 0xff)<<24,\n      j5  = c[ 4] & 0xff | (c[ 5] & 0xff)<<8 | (c[ 6] & 0xff)<<16 | (c[ 7] & 0xff)<<24,\n      j6  = p[ 0] & 0xff | (p[ 1] & 0xff)<<8 | (p[ 2] & 0xff)<<16 | (p[ 3] & 0xff)<<24,\n      j7  = p[ 4] & 0xff | (p[ 5] & 0xff)<<8 | (p[ 6] & 0xff)<<16 | (p[ 7] & 0xff)<<24,\n      j8  = p[ 8] & 0xff | (p[ 9] & 0xff)<<8 | (p[10] & 0xff)<<16 | (p[11] & 0xff)<<24,\n      j9  = p[12] & 0xff | (p[13] & 0xff)<<8 | (p[14] & 0xff)<<16 | (p[15] & 0xff)<<24,\n      j10 = c[ 8] & 0xff | (c[ 9] & 0xff)<<8 | (c[10] & 0xff)<<16 | (c[11] & 0xff)<<24,\n      j11 = k[16] & 0xff | (k[17] & 0xff)<<8 | (k[18] & 0xff)<<16 | (k[19] & 0xff)<<24,\n      j12 = k[20] & 0xff | (k[21] & 0xff)<<8 | (k[22] & 0xff)<<16 | (k[23] & 0xff)<<24,\n      j13 = k[24] & 0xff | (k[25] & 0xff)<<8 | (k[26] & 0xff)<<16 | (k[27] & 0xff)<<24,\n      j14 = k[28] & 0xff | (k[29] & 0xff)<<8 | (k[30] & 0xff)<<16 | (k[31] & 0xff)<<24,\n      j15 = c[12] & 0xff | (c[13] & 0xff)<<8 | (c[14] & 0xff)<<16 | (c[15] & 0xff)<<24;\n\n  var x0 = j0, x1 = j1, x2 = j2, x3 = j3, x4 = j4, x5 = j5, x6 = j6, x7 = j7,\n      x8 = j8, x9 = j9, x10 = j10, x11 = j11, x12 = j12, x13 = j13, x14 = j14,\n      x15 = j15, u;\n\n  for (var i = 0; i < 20; i += 2) {\n    u = x0 + x12 | 0;\n    x4 ^= u<<7 | u>>>(32-7);\n    u = x4 + x0 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x4 | 0;\n    x12 ^= u<<13 | u>>>(32-13);\n    u = x12 + x8 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x1 | 0;\n    x9 ^= u<<7 | u>>>(32-7);\n    u = x9 + x5 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x9 | 0;\n    x1 ^= u<<13 | u>>>(32-13);\n    u = x1 + x13 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x6 | 0;\n    x14 ^= u<<7 | u>>>(32-7);\n    u = x14 + x10 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x14 | 0;\n    x6 ^= u<<13 | u>>>(32-13);\n    u = x6 + x2 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x11 | 0;\n    x3 ^= u<<7 | u>>>(32-7);\n    u = x3 + x15 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x3 | 0;\n    x11 ^= u<<13 | u>>>(32-13);\n    u = x11 + x7 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n\n    u = x0 + x3 | 0;\n    x1 ^= u<<7 | u>>>(32-7);\n    u = x1 + x0 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x1 | 0;\n    x3 ^= u<<13 | u>>>(32-13);\n    u = x3 + x2 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x4 | 0;\n    x6 ^= u<<7 | u>>>(32-7);\n    u = x6 + x5 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x6 | 0;\n    x4 ^= u<<13 | u>>>(32-13);\n    u = x4 + x7 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x9 | 0;\n    x11 ^= u<<7 | u>>>(32-7);\n    u = x11 + x10 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x11 | 0;\n    x9 ^= u<<13 | u>>>(32-13);\n    u = x9 + x8 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x14 | 0;\n    x12 ^= u<<7 | u>>>(32-7);\n    u = x12 + x15 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x12 | 0;\n    x14 ^= u<<13 | u>>>(32-13);\n    u = x14 + x13 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n  }\n   x0 =  x0 +  j0 | 0;\n   x1 =  x1 +  j1 | 0;\n   x2 =  x2 +  j2 | 0;\n   x3 =  x3 +  j3 | 0;\n   x4 =  x4 +  j4 | 0;\n   x5 =  x5 +  j5 | 0;\n   x6 =  x6 +  j6 | 0;\n   x7 =  x7 +  j7 | 0;\n   x8 =  x8 +  j8 | 0;\n   x9 =  x9 +  j9 | 0;\n  x10 = x10 + j10 | 0;\n  x11 = x11 + j11 | 0;\n  x12 = x12 + j12 | 0;\n  x13 = x13 + j13 | 0;\n  x14 = x14 + j14 | 0;\n  x15 = x15 + j15 | 0;\n\n  o[ 0] = x0 >>>  0 & 0xff;\n  o[ 1] = x0 >>>  8 & 0xff;\n  o[ 2] = x0 >>> 16 & 0xff;\n  o[ 3] = x0 >>> 24 & 0xff;\n\n  o[ 4] = x1 >>>  0 & 0xff;\n  o[ 5] = x1 >>>  8 & 0xff;\n  o[ 6] = x1 >>> 16 & 0xff;\n  o[ 7] = x1 >>> 24 & 0xff;\n\n  o[ 8] = x2 >>>  0 & 0xff;\n  o[ 9] = x2 >>>  8 & 0xff;\n  o[10] = x2 >>> 16 & 0xff;\n  o[11] = x2 >>> 24 & 0xff;\n\n  o[12] = x3 >>>  0 & 0xff;\n  o[13] = x3 >>>  8 & 0xff;\n  o[14] = x3 >>> 16 & 0xff;\n  o[15] = x3 >>> 24 & 0xff;\n\n  o[16] = x4 >>>  0 & 0xff;\n  o[17] = x4 >>>  8 & 0xff;\n  o[18] = x4 >>> 16 & 0xff;\n  o[19] = x4 >>> 24 & 0xff;\n\n  o[20] = x5 >>>  0 & 0xff;\n  o[21] = x5 >>>  8 & 0xff;\n  o[22] = x5 >>> 16 & 0xff;\n  o[23] = x5 >>> 24 & 0xff;\n\n  o[24] = x6 >>>  0 & 0xff;\n  o[25] = x6 >>>  8 & 0xff;\n  o[26] = x6 >>> 16 & 0xff;\n  o[27] = x6 >>> 24 & 0xff;\n\n  o[28] = x7 >>>  0 & 0xff;\n  o[29] = x7 >>>  8 & 0xff;\n  o[30] = x7 >>> 16 & 0xff;\n  o[31] = x7 >>> 24 & 0xff;\n\n  o[32] = x8 >>>  0 & 0xff;\n  o[33] = x8 >>>  8 & 0xff;\n  o[34] = x8 >>> 16 & 0xff;\n  o[35] = x8 >>> 24 & 0xff;\n\n  o[36] = x9 >>>  0 & 0xff;\n  o[37] = x9 >>>  8 & 0xff;\n  o[38] = x9 >>> 16 & 0xff;\n  o[39] = x9 >>> 24 & 0xff;\n\n  o[40] = x10 >>>  0 & 0xff;\n  o[41] = x10 >>>  8 & 0xff;\n  o[42] = x10 >>> 16 & 0xff;\n  o[43] = x10 >>> 24 & 0xff;\n\n  o[44] = x11 >>>  0 & 0xff;\n  o[45] = x11 >>>  8 & 0xff;\n  o[46] = x11 >>> 16 & 0xff;\n  o[47] = x11 >>> 24 & 0xff;\n\n  o[48] = x12 >>>  0 & 0xff;\n  o[49] = x12 >>>  8 & 0xff;\n  o[50] = x12 >>> 16 & 0xff;\n  o[51] = x12 >>> 24 & 0xff;\n\n  o[52] = x13 >>>  0 & 0xff;\n  o[53] = x13 >>>  8 & 0xff;\n  o[54] = x13 >>> 16 & 0xff;\n  o[55] = x13 >>> 24 & 0xff;\n\n  o[56] = x14 >>>  0 & 0xff;\n  o[57] = x14 >>>  8 & 0xff;\n  o[58] = x14 >>> 16 & 0xff;\n  o[59] = x14 >>> 24 & 0xff;\n\n  o[60] = x15 >>>  0 & 0xff;\n  o[61] = x15 >>>  8 & 0xff;\n  o[62] = x15 >>> 16 & 0xff;\n  o[63] = x15 >>> 24 & 0xff;\n}\n\nfunction core_hsalsa20(o,p,k,c) {\n  var j0  = c[ 0] & 0xff | (c[ 1] & 0xff)<<8 | (c[ 2] & 0xff)<<16 | (c[ 3] & 0xff)<<24,\n      j1  = k[ 0] & 0xff | (k[ 1] & 0xff)<<8 | (k[ 2] & 0xff)<<16 | (k[ 3] & 0xff)<<24,\n      j2  = k[ 4] & 0xff | (k[ 5] & 0xff)<<8 | (k[ 6] & 0xff)<<16 | (k[ 7] & 0xff)<<24,\n      j3  = k[ 8] & 0xff | (k[ 9] & 0xff)<<8 | (k[10] & 0xff)<<16 | (k[11] & 0xff)<<24,\n      j4  = k[12] & 0xff | (k[13] & 0xff)<<8 | (k[14] & 0xff)<<16 | (k[15] & 0xff)<<24,\n      j5  = c[ 4] & 0xff | (c[ 5] & 0xff)<<8 | (c[ 6] & 0xff)<<16 | (c[ 7] & 0xff)<<24,\n      j6  = p[ 0] & 0xff | (p[ 1] & 0xff)<<8 | (p[ 2] & 0xff)<<16 | (p[ 3] & 0xff)<<24,\n      j7  = p[ 4] & 0xff | (p[ 5] & 0xff)<<8 | (p[ 6] & 0xff)<<16 | (p[ 7] & 0xff)<<24,\n      j8  = p[ 8] & 0xff | (p[ 9] & 0xff)<<8 | (p[10] & 0xff)<<16 | (p[11] & 0xff)<<24,\n      j9  = p[12] & 0xff | (p[13] & 0xff)<<8 | (p[14] & 0xff)<<16 | (p[15] & 0xff)<<24,\n      j10 = c[ 8] & 0xff | (c[ 9] & 0xff)<<8 | (c[10] & 0xff)<<16 | (c[11] & 0xff)<<24,\n      j11 = k[16] & 0xff | (k[17] & 0xff)<<8 | (k[18] & 0xff)<<16 | (k[19] & 0xff)<<24,\n      j12 = k[20] & 0xff | (k[21] & 0xff)<<8 | (k[22] & 0xff)<<16 | (k[23] & 0xff)<<24,\n      j13 = k[24] & 0xff | (k[25] & 0xff)<<8 | (k[26] & 0xff)<<16 | (k[27] & 0xff)<<24,\n      j14 = k[28] & 0xff | (k[29] & 0xff)<<8 | (k[30] & 0xff)<<16 | (k[31] & 0xff)<<24,\n      j15 = c[12] & 0xff | (c[13] & 0xff)<<8 | (c[14] & 0xff)<<16 | (c[15] & 0xff)<<24;\n\n  var x0 = j0, x1 = j1, x2 = j2, x3 = j3, x4 = j4, x5 = j5, x6 = j6, x7 = j7,\n      x8 = j8, x9 = j9, x10 = j10, x11 = j11, x12 = j12, x13 = j13, x14 = j14,\n      x15 = j15, u;\n\n  for (var i = 0; i < 20; i += 2) {\n    u = x0 + x12 | 0;\n    x4 ^= u<<7 | u>>>(32-7);\n    u = x4 + x0 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x4 | 0;\n    x12 ^= u<<13 | u>>>(32-13);\n    u = x12 + x8 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x1 | 0;\n    x9 ^= u<<7 | u>>>(32-7);\n    u = x9 + x5 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x9 | 0;\n    x1 ^= u<<13 | u>>>(32-13);\n    u = x1 + x13 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x6 | 0;\n    x14 ^= u<<7 | u>>>(32-7);\n    u = x14 + x10 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x14 | 0;\n    x6 ^= u<<13 | u>>>(32-13);\n    u = x6 + x2 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x11 | 0;\n    x3 ^= u<<7 | u>>>(32-7);\n    u = x3 + x15 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x3 | 0;\n    x11 ^= u<<13 | u>>>(32-13);\n    u = x11 + x7 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n\n    u = x0 + x3 | 0;\n    x1 ^= u<<7 | u>>>(32-7);\n    u = x1 + x0 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x1 | 0;\n    x3 ^= u<<13 | u>>>(32-13);\n    u = x3 + x2 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x4 | 0;\n    x6 ^= u<<7 | u>>>(32-7);\n    u = x6 + x5 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x6 | 0;\n    x4 ^= u<<13 | u>>>(32-13);\n    u = x4 + x7 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x9 | 0;\n    x11 ^= u<<7 | u>>>(32-7);\n    u = x11 + x10 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x11 | 0;\n    x9 ^= u<<13 | u>>>(32-13);\n    u = x9 + x8 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x14 | 0;\n    x12 ^= u<<7 | u>>>(32-7);\n    u = x12 + x15 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x12 | 0;\n    x14 ^= u<<13 | u>>>(32-13);\n    u = x14 + x13 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n  }\n\n  o[ 0] = x0 >>>  0 & 0xff;\n  o[ 1] = x0 >>>  8 & 0xff;\n  o[ 2] = x0 >>> 16 & 0xff;\n  o[ 3] = x0 >>> 24 & 0xff;\n\n  o[ 4] = x5 >>>  0 & 0xff;\n  o[ 5] = x5 >>>  8 & 0xff;\n  o[ 6] = x5 >>> 16 & 0xff;\n  o[ 7] = x5 >>> 24 & 0xff;\n\n  o[ 8] = x10 >>>  0 & 0xff;\n  o[ 9] = x10 >>>  8 & 0xff;\n  o[10] = x10 >>> 16 & 0xff;\n  o[11] = x10 >>> 24 & 0xff;\n\n  o[12] = x15 >>>  0 & 0xff;\n  o[13] = x15 >>>  8 & 0xff;\n  o[14] = x15 >>> 16 & 0xff;\n  o[15] = x15 >>> 24 & 0xff;\n\n  o[16] = x6 >>>  0 & 0xff;\n  o[17] = x6 >>>  8 & 0xff;\n  o[18] = x6 >>> 16 & 0xff;\n  o[19] = x6 >>> 24 & 0xff;\n\n  o[20] = x7 >>>  0 & 0xff;\n  o[21] = x7 >>>  8 & 0xff;\n  o[22] = x7 >>> 16 & 0xff;\n  o[23] = x7 >>> 24 & 0xff;\n\n  o[24] = x8 >>>  0 & 0xff;\n  o[25] = x8 >>>  8 & 0xff;\n  o[26] = x8 >>> 16 & 0xff;\n  o[27] = x8 >>> 24 & 0xff;\n\n  o[28] = x9 >>>  0 & 0xff;\n  o[29] = x9 >>>  8 & 0xff;\n  o[30] = x9 >>> 16 & 0xff;\n  o[31] = x9 >>> 24 & 0xff;\n}\n\nfunction crypto_core_salsa20(out,inp,k,c) {\n  core_salsa20(out,inp,k,c);\n}\n\nfunction crypto_core_hsalsa20(out,inp,k,c) {\n  core_hsalsa20(out,inp,k,c);\n}\n\nvar sigma = new Uint8Array([101, 120, 112, 97, 110, 100, 32, 51, 50, 45, 98, 121, 116, 101, 32, 107]);\n            // \"expand 32-byte k\"\n\nfunction crypto_stream_salsa20_xor(c,cpos,m,mpos,b,n,k) {\n  var z = new Uint8Array(16), x = new Uint8Array(64);\n  var u, i;\n  for (i = 0; i < 16; i++) z[i] = 0;\n  for (i = 0; i < 8; i++) z[i] = n[i];\n  while (b >= 64) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < 64; i++) c[cpos+i] = m[mpos+i] ^ x[i];\n    u = 1;\n    for (i = 8; i < 16; i++) {\n      u = u + (z[i] & 0xff) | 0;\n      z[i] = u & 0xff;\n      u >>>= 8;\n    }\n    b -= 64;\n    cpos += 64;\n    mpos += 64;\n  }\n  if (b > 0) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < b; i++) c[cpos+i] = m[mpos+i] ^ x[i];\n  }\n  return 0;\n}\n\nfunction crypto_stream_salsa20(c,cpos,b,n,k) {\n  var z = new Uint8Array(16), x = new Uint8Array(64);\n  var u, i;\n  for (i = 0; i < 16; i++) z[i] = 0;\n  for (i = 0; i < 8; i++) z[i] = n[i];\n  while (b >= 64) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < 64; i++) c[cpos+i] = x[i];\n    u = 1;\n    for (i = 8; i < 16; i++) {\n      u = u + (z[i] & 0xff) | 0;\n      z[i] = u & 0xff;\n      u >>>= 8;\n    }\n    b -= 64;\n    cpos += 64;\n  }\n  if (b > 0) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < b; i++) c[cpos+i] = x[i];\n  }\n  return 0;\n}\n\nfunction crypto_stream(c,cpos,d,n,k) {\n  var s = new Uint8Array(32);\n  crypto_core_hsalsa20(s,n,k,sigma);\n  var sn = new Uint8Array(8);\n  for (var i = 0; i < 8; i++) sn[i] = n[i+16];\n  return crypto_stream_salsa20(c,cpos,d,sn,s);\n}\n\nfunction crypto_stream_xor(c,cpos,m,mpos,d,n,k) {\n  var s = new Uint8Array(32);\n  crypto_core_hsalsa20(s,n,k,sigma);\n  var sn = new Uint8Array(8);\n  for (var i = 0; i < 8; i++) sn[i] = n[i+16];\n  return crypto_stream_salsa20_xor(c,cpos,m,mpos,d,sn,s);\n}\n\n/*\n* Port of Andrew Moon's Poly1305-donna-16. Public domain.\n* https://github.com/floodyberry/poly1305-donna\n*/\n\nvar poly1305 = function(key) {\n  this.buffer = new Uint8Array(16);\n  this.r = new Uint16Array(10);\n  this.h = new Uint16Array(10);\n  this.pad = new Uint16Array(8);\n  this.leftover = 0;\n  this.fin = 0;\n\n  var t0, t1, t2, t3, t4, t5, t6, t7;\n\n  t0 = key[ 0] & 0xff | (key[ 1] & 0xff) << 8; this.r[0] = ( t0                     ) & 0x1fff;\n  t1 = key[ 2] & 0xff | (key[ 3] & 0xff) << 8; this.r[1] = ((t0 >>> 13) | (t1 <<  3)) & 0x1fff;\n  t2 = key[ 4] & 0xff | (key[ 5] & 0xff) << 8; this.r[2] = ((t1 >>> 10) | (t2 <<  6)) & 0x1f03;\n  t3 = key[ 6] & 0xff | (key[ 7] & 0xff) << 8; this.r[3] = ((t2 >>>  7) | (t3 <<  9)) & 0x1fff;\n  t4 = key[ 8] & 0xff | (key[ 9] & 0xff) << 8; this.r[4] = ((t3 >>>  4) | (t4 << 12)) & 0x00ff;\n  this.r[5] = ((t4 >>>  1)) & 0x1ffe;\n  t5 = key[10] & 0xff | (key[11] & 0xff) << 8; this.r[6] = ((t4 >>> 14) | (t5 <<  2)) & 0x1fff;\n  t6 = key[12] & 0xff | (key[13] & 0xff) << 8; this.r[7] = ((t5 >>> 11) | (t6 <<  5)) & 0x1f81;\n  t7 = key[14] & 0xff | (key[15] & 0xff) << 8; this.r[8] = ((t6 >>>  8) | (t7 <<  8)) & 0x1fff;\n  this.r[9] = ((t7 >>>  5)) & 0x007f;\n\n  this.pad[0] = key[16] & 0xff | (key[17] & 0xff) << 8;\n  this.pad[1] = key[18] & 0xff | (key[19] & 0xff) << 8;\n  this.pad[2] = key[20] & 0xff | (key[21] & 0xff) << 8;\n  this.pad[3] = key[22] & 0xff | (key[23] & 0xff) << 8;\n  this.pad[4] = key[24] & 0xff | (key[25] & 0xff) << 8;\n  this.pad[5] = key[26] & 0xff | (key[27] & 0xff) << 8;\n  this.pad[6] = key[28] & 0xff | (key[29] & 0xff) << 8;\n  this.pad[7] = key[30] & 0xff | (key[31] & 0xff) << 8;\n};\n\npoly1305.prototype.blocks = function(m, mpos, bytes) {\n  var hibit = this.fin ? 0 : (1 << 11);\n  var t0, t1, t2, t3, t4, t5, t6, t7, c;\n  var d0, d1, d2, d3, d4, d5, d6, d7, d8, d9;\n\n  var h0 = this.h[0],\n      h1 = this.h[1],\n      h2 = this.h[2],\n      h3 = this.h[3],\n      h4 = this.h[4],\n      h5 = this.h[5],\n      h6 = this.h[6],\n      h7 = this.h[7],\n      h8 = this.h[8],\n      h9 = this.h[9];\n\n  var r0 = this.r[0],\n      r1 = this.r[1],\n      r2 = this.r[2],\n      r3 = this.r[3],\n      r4 = this.r[4],\n      r5 = this.r[5],\n      r6 = this.r[6],\n      r7 = this.r[7],\n      r8 = this.r[8],\n      r9 = this.r[9];\n\n  while (bytes >= 16) {\n    t0 = m[mpos+ 0] & 0xff | (m[mpos+ 1] & 0xff) << 8; h0 += ( t0                     ) & 0x1fff;\n    t1 = m[mpos+ 2] & 0xff | (m[mpos+ 3] & 0xff) << 8; h1 += ((t0 >>> 13) | (t1 <<  3)) & 0x1fff;\n    t2 = m[mpos+ 4] & 0xff | (m[mpos+ 5] & 0xff) << 8; h2 += ((t1 >>> 10) | (t2 <<  6)) & 0x1fff;\n    t3 = m[mpos+ 6] & 0xff | (m[mpos+ 7] & 0xff) << 8; h3 += ((t2 >>>  7) | (t3 <<  9)) & 0x1fff;\n    t4 = m[mpos+ 8] & 0xff | (m[mpos+ 9] & 0xff) << 8; h4 += ((t3 >>>  4) | (t4 << 12)) & 0x1fff;\n    h5 += ((t4 >>>  1)) & 0x1fff;\n    t5 = m[mpos+10] & 0xff | (m[mpos+11] & 0xff) << 8; h6 += ((t4 >>> 14) | (t5 <<  2)) & 0x1fff;\n    t6 = m[mpos+12] & 0xff | (m[mpos+13] & 0xff) << 8; h7 += ((t5 >>> 11) | (t6 <<  5)) & 0x1fff;\n    t7 = m[mpos+14] & 0xff | (m[mpos+15] & 0xff) << 8; h8 += ((t6 >>>  8) | (t7 <<  8)) & 0x1fff;\n    h9 += ((t7 >>> 5)) | hibit;\n\n    c = 0;\n\n    d0 = c;\n    d0 += h0 * r0;\n    d0 += h1 * (5 * r9);\n    d0 += h2 * (5 * r8);\n    d0 += h3 * (5 * r7);\n    d0 += h4 * (5 * r6);\n    c = (d0 >>> 13); d0 &= 0x1fff;\n    d0 += h5 * (5 * r5);\n    d0 += h6 * (5 * r4);\n    d0 += h7 * (5 * r3);\n    d0 += h8 * (5 * r2);\n    d0 += h9 * (5 * r1);\n    c += (d0 >>> 13); d0 &= 0x1fff;\n\n    d1 = c;\n    d1 += h0 * r1;\n    d1 += h1 * r0;\n    d1 += h2 * (5 * r9);\n    d1 += h3 * (5 * r8);\n    d1 += h4 * (5 * r7);\n    c = (d1 >>> 13); d1 &= 0x1fff;\n    d1 += h5 * (5 * r6);\n    d1 += h6 * (5 * r5);\n    d1 += h7 * (5 * r4);\n    d1 += h8 * (5 * r3);\n    d1 += h9 * (5 * r2);\n    c += (d1 >>> 13); d1 &= 0x1fff;\n\n    d2 = c;\n    d2 += h0 * r2;\n    d2 += h1 * r1;\n    d2 += h2 * r0;\n    d2 += h3 * (5 * r9);\n    d2 += h4 * (5 * r8);\n    c = (d2 >>> 13); d2 &= 0x1fff;\n    d2 += h5 * (5 * r7);\n    d2 += h6 * (5 * r6);\n    d2 += h7 * (5 * r5);\n    d2 += h8 * (5 * r4);\n    d2 += h9 * (5 * r3);\n    c += (d2 >>> 13); d2 &= 0x1fff;\n\n    d3 = c;\n    d3 += h0 * r3;\n    d3 += h1 * r2;\n    d3 += h2 * r1;\n    d3 += h3 * r0;\n    d3 += h4 * (5 * r9);\n    c = (d3 >>> 13); d3 &= 0x1fff;\n    d3 += h5 * (5 * r8);\n    d3 += h6 * (5 * r7);\n    d3 += h7 * (5 * r6);\n    d3 += h8 * (5 * r5);\n    d3 += h9 * (5 * r4);\n    c += (d3 >>> 13); d3 &= 0x1fff;\n\n    d4 = c;\n    d4 += h0 * r4;\n    d4 += h1 * r3;\n    d4 += h2 * r2;\n    d4 += h3 * r1;\n    d4 += h4 * r0;\n    c = (d4 >>> 13); d4 &= 0x1fff;\n    d4 += h5 * (5 * r9);\n    d4 += h6 * (5 * r8);\n    d4 += h7 * (5 * r7);\n    d4 += h8 * (5 * r6);\n    d4 += h9 * (5 * r5);\n    c += (d4 >>> 13); d4 &= 0x1fff;\n\n    d5 = c;\n    d5 += h0 * r5;\n    d5 += h1 * r4;\n    d5 += h2 * r3;\n    d5 += h3 * r2;\n    d5 += h4 * r1;\n    c = (d5 >>> 13); d5 &= 0x1fff;\n    d5 += h5 * r0;\n    d5 += h6 * (5 * r9);\n    d5 += h7 * (5 * r8);\n    d5 += h8 * (5 * r7);\n    d5 += h9 * (5 * r6);\n    c += (d5 >>> 13); d5 &= 0x1fff;\n\n    d6 = c;\n    d6 += h0 * r6;\n    d6 += h1 * r5;\n    d6 += h2 * r4;\n    d6 += h3 * r3;\n    d6 += h4 * r2;\n    c = (d6 >>> 13); d6 &= 0x1fff;\n    d6 += h5 * r1;\n    d6 += h6 * r0;\n    d6 += h7 * (5 * r9);\n    d6 += h8 * (5 * r8);\n    d6 += h9 * (5 * r7);\n    c += (d6 >>> 13); d6 &= 0x1fff;\n\n    d7 = c;\n    d7 += h0 * r7;\n    d7 += h1 * r6;\n    d7 += h2 * r5;\n    d7 += h3 * r4;\n    d7 += h4 * r3;\n    c = (d7 >>> 13); d7 &= 0x1fff;\n    d7 += h5 * r2;\n    d7 += h6 * r1;\n    d7 += h7 * r0;\n    d7 += h8 * (5 * r9);\n    d7 += h9 * (5 * r8);\n    c += (d7 >>> 13); d7 &= 0x1fff;\n\n    d8 = c;\n    d8 += h0 * r8;\n    d8 += h1 * r7;\n    d8 += h2 * r6;\n    d8 += h3 * r5;\n    d8 += h4 * r4;\n    c = (d8 >>> 13); d8 &= 0x1fff;\n    d8 += h5 * r3;\n    d8 += h6 * r2;\n    d8 += h7 * r1;\n    d8 += h8 * r0;\n    d8 += h9 * (5 * r9);\n    c += (d8 >>> 13); d8 &= 0x1fff;\n\n    d9 = c;\n    d9 += h0 * r9;\n    d9 += h1 * r8;\n    d9 += h2 * r7;\n    d9 += h3 * r6;\n    d9 += h4 * r5;\n    c = (d9 >>> 13); d9 &= 0x1fff;\n    d9 += h5 * r4;\n    d9 += h6 * r3;\n    d9 += h7 * r2;\n    d9 += h8 * r1;\n    d9 += h9 * r0;\n    c += (d9 >>> 13); d9 &= 0x1fff;\n\n    c = (((c << 2) + c)) | 0;\n    c = (c + d0) | 0;\n    d0 = c & 0x1fff;\n    c = (c >>> 13);\n    d1 += c;\n\n    h0 = d0;\n    h1 = d1;\n    h2 = d2;\n    h3 = d3;\n    h4 = d4;\n    h5 = d5;\n    h6 = d6;\n    h7 = d7;\n    h8 = d8;\n    h9 = d9;\n\n    mpos += 16;\n    bytes -= 16;\n  }\n  this.h[0] = h0;\n  this.h[1] = h1;\n  this.h[2] = h2;\n  this.h[3] = h3;\n  this.h[4] = h4;\n  this.h[5] = h5;\n  this.h[6] = h6;\n  this.h[7] = h7;\n  this.h[8] = h8;\n  this.h[9] = h9;\n};\n\npoly1305.prototype.finish = function(mac, macpos) {\n  var g = new Uint16Array(10);\n  var c, mask, f, i;\n\n  if (this.leftover) {\n    i = this.leftover;\n    this.buffer[i++] = 1;\n    for (; i < 16; i++) this.buffer[i] = 0;\n    this.fin = 1;\n    this.blocks(this.buffer, 0, 16);\n  }\n\n  c = this.h[1] >>> 13;\n  this.h[1] &= 0x1fff;\n  for (i = 2; i < 10; i++) {\n    this.h[i] += c;\n    c = this.h[i] >>> 13;\n    this.h[i] &= 0x1fff;\n  }\n  this.h[0] += (c * 5);\n  c = this.h[0] >>> 13;\n  this.h[0] &= 0x1fff;\n  this.h[1] += c;\n  c = this.h[1] >>> 13;\n  this.h[1] &= 0x1fff;\n  this.h[2] += c;\n\n  g[0] = this.h[0] + 5;\n  c = g[0] >>> 13;\n  g[0] &= 0x1fff;\n  for (i = 1; i < 10; i++) {\n    g[i] = this.h[i] + c;\n    c = g[i] >>> 13;\n    g[i] &= 0x1fff;\n  }\n  g[9] -= (1 << 13);\n\n  mask = (c ^ 1) - 1;\n  for (i = 0; i < 10; i++) g[i] &= mask;\n  mask = ~mask;\n  for (i = 0; i < 10; i++) this.h[i] = (this.h[i] & mask) | g[i];\n\n  this.h[0] = ((this.h[0]       ) | (this.h[1] << 13)                    ) & 0xffff;\n  this.h[1] = ((this.h[1] >>>  3) | (this.h[2] << 10)                    ) & 0xffff;\n  this.h[2] = ((this.h[2] >>>  6) | (this.h[3] <<  7)                    ) & 0xffff;\n  this.h[3] = ((this.h[3] >>>  9) | (this.h[4] <<  4)                    ) & 0xffff;\n  this.h[4] = ((this.h[4] >>> 12) | (this.h[5] <<  1) | (this.h[6] << 14)) & 0xffff;\n  this.h[5] = ((this.h[6] >>>  2) | (this.h[7] << 11)                    ) & 0xffff;\n  this.h[6] = ((this.h[7] >>>  5) | (this.h[8] <<  8)                    ) & 0xffff;\n  this.h[7] = ((this.h[8] >>>  8) | (this.h[9] <<  5)                    ) & 0xffff;\n\n  f = this.h[0] + this.pad[0];\n  this.h[0] = f & 0xffff;\n  for (i = 1; i < 8; i++) {\n    f = (((this.h[i] + this.pad[i]) | 0) + (f >>> 16)) | 0;\n    this.h[i] = f & 0xffff;\n  }\n\n  mac[macpos+ 0] = (this.h[0] >>> 0) & 0xff;\n  mac[macpos+ 1] = (this.h[0] >>> 8) & 0xff;\n  mac[macpos+ 2] = (this.h[1] >>> 0) & 0xff;\n  mac[macpos+ 3] = (this.h[1] >>> 8) & 0xff;\n  mac[macpos+ 4] = (this.h[2] >>> 0) & 0xff;\n  mac[macpos+ 5] = (this.h[2] >>> 8) & 0xff;\n  mac[macpos+ 6] = (this.h[3] >>> 0) & 0xff;\n  mac[macpos+ 7] = (this.h[3] >>> 8) & 0xff;\n  mac[macpos+ 8] = (this.h[4] >>> 0) & 0xff;\n  mac[macpos+ 9] = (this.h[4] >>> 8) & 0xff;\n  mac[macpos+10] = (this.h[5] >>> 0) & 0xff;\n  mac[macpos+11] = (this.h[5] >>> 8) & 0xff;\n  mac[macpos+12] = (this.h[6] >>> 0) & 0xff;\n  mac[macpos+13] = (this.h[6] >>> 8) & 0xff;\n  mac[macpos+14] = (this.h[7] >>> 0) & 0xff;\n  mac[macpos+15] = (this.h[7] >>> 8) & 0xff;\n};\n\npoly1305.prototype.update = function(m, mpos, bytes) {\n  var i, want;\n\n  if (this.leftover) {\n    want = (16 - this.leftover);\n    if (want > bytes)\n      want = bytes;\n    for (i = 0; i < want; i++)\n      this.buffer[this.leftover + i] = m[mpos+i];\n    bytes -= want;\n    mpos += want;\n    this.leftover += want;\n    if (this.leftover < 16)\n      return;\n    this.blocks(this.buffer, 0, 16);\n    this.leftover = 0;\n  }\n\n  if (bytes >= 16) {\n    want = bytes - (bytes % 16);\n    this.blocks(m, mpos, want);\n    mpos += want;\n    bytes -= want;\n  }\n\n  if (bytes) {\n    for (i = 0; i < bytes; i++)\n      this.buffer[this.leftover + i] = m[mpos+i];\n    this.leftover += bytes;\n  }\n};\n\nfunction crypto_onetimeauth(out, outpos, m, mpos, n, k) {\n  var s = new poly1305(k);\n  s.update(m, mpos, n);\n  s.finish(out, outpos);\n  return 0;\n}\n\nfunction crypto_onetimeauth_verify(h, hpos, m, mpos, n, k) {\n  var x = new Uint8Array(16);\n  crypto_onetimeauth(x,0,m,mpos,n,k);\n  return crypto_verify_16(h,hpos,x,0);\n}\n\nfunction crypto_secretbox(c,m,d,n,k) {\n  var i;\n  if (d < 32) return -1;\n  crypto_stream_xor(c,0,m,0,d,n,k);\n  crypto_onetimeauth(c, 16, c, 32, d - 32, c);\n  for (i = 0; i < 16; i++) c[i] = 0;\n  return 0;\n}\n\nfunction crypto_secretbox_open(m,c,d,n,k) {\n  var i;\n  var x = new Uint8Array(32);\n  if (d < 32) return -1;\n  crypto_stream(x,0,32,n,k);\n  if (crypto_onetimeauth_verify(c, 16,c, 32,d - 32,x) !== 0) return -1;\n  crypto_stream_xor(m,0,c,0,d,n,k);\n  for (i = 0; i < 32; i++) m[i] = 0;\n  return 0;\n}\n\nfunction set25519(r, a) {\n  var i;\n  for (i = 0; i < 16; i++) r[i] = a[i]|0;\n}\n\nfunction car25519(o) {\n  var i, v, c = 1;\n  for (i = 0; i < 16; i++) {\n    v = o[i] + c + 65535;\n    c = Math.floor(v / 65536);\n    o[i] = v - c * 65536;\n  }\n  o[0] += c-1 + 37 * (c-1);\n}\n\nfunction sel25519(p, q, b) {\n  var t, c = ~(b-1);\n  for (var i = 0; i < 16; i++) {\n    t = c & (p[i] ^ q[i]);\n    p[i] ^= t;\n    q[i] ^= t;\n  }\n}\n\nfunction pack25519(o, n) {\n  var i, j, b;\n  var m = gf(), t = gf();\n  for (i = 0; i < 16; i++) t[i] = n[i];\n  car25519(t);\n  car25519(t);\n  car25519(t);\n  for (j = 0; j < 2; j++) {\n    m[0] = t[0] - 0xffed;\n    for (i = 1; i < 15; i++) {\n      m[i] = t[i] - 0xffff - ((m[i-1]>>16) & 1);\n      m[i-1] &= 0xffff;\n    }\n    m[15] = t[15] - 0x7fff - ((m[14]>>16) & 1);\n    b = (m[15]>>16) & 1;\n    m[14] &= 0xffff;\n    sel25519(t, m, 1-b);\n  }\n  for (i = 0; i < 16; i++) {\n    o[2*i] = t[i] & 0xff;\n    o[2*i+1] = t[i]>>8;\n  }\n}\n\nfunction neq25519(a, b) {\n  var c = new Uint8Array(32), d = new Uint8Array(32);\n  pack25519(c, a);\n  pack25519(d, b);\n  return crypto_verify_32(c, 0, d, 0);\n}\n\nfunction par25519(a) {\n  var d = new Uint8Array(32);\n  pack25519(d, a);\n  return d[0] & 1;\n}\n\nfunction unpack25519(o, n) {\n  var i;\n  for (i = 0; i < 16; i++) o[i] = n[2*i] + (n[2*i+1] << 8);\n  o[15] &= 0x7fff;\n}\n\nfunction A(o, a, b) {\n  for (var i = 0; i < 16; i++) o[i] = a[i] + b[i];\n}\n\nfunction Z(o, a, b) {\n  for (var i = 0; i < 16; i++) o[i] = a[i] - b[i];\n}\n\nfunction M(o, a, b) {\n  var v, c,\n     t0 = 0,  t1 = 0,  t2 = 0,  t3 = 0,  t4 = 0,  t5 = 0,  t6 = 0,  t7 = 0,\n     t8 = 0,  t9 = 0, t10 = 0, t11 = 0, t12 = 0, t13 = 0, t14 = 0, t15 = 0,\n    t16 = 0, t17 = 0, t18 = 0, t19 = 0, t20 = 0, t21 = 0, t22 = 0, t23 = 0,\n    t24 = 0, t25 = 0, t26 = 0, t27 = 0, t28 = 0, t29 = 0, t30 = 0,\n    b0 = b[0],\n    b1 = b[1],\n    b2 = b[2],\n    b3 = b[3],\n    b4 = b[4],\n    b5 = b[5],\n    b6 = b[6],\n    b7 = b[7],\n    b8 = b[8],\n    b9 = b[9],\n    b10 = b[10],\n    b11 = b[11],\n    b12 = b[12],\n    b13 = b[13],\n    b14 = b[14],\n    b15 = b[15];\n\n  v = a[0];\n  t0 += v * b0;\n  t1 += v * b1;\n  t2 += v * b2;\n  t3 += v * b3;\n  t4 += v * b4;\n  t5 += v * b5;\n  t6 += v * b6;\n  t7 += v * b7;\n  t8 += v * b8;\n  t9 += v * b9;\n  t10 += v * b10;\n  t11 += v * b11;\n  t12 += v * b12;\n  t13 += v * b13;\n  t14 += v * b14;\n  t15 += v * b15;\n  v = a[1];\n  t1 += v * b0;\n  t2 += v * b1;\n  t3 += v * b2;\n  t4 += v * b3;\n  t5 += v * b4;\n  t6 += v * b5;\n  t7 += v * b6;\n  t8 += v * b7;\n  t9 += v * b8;\n  t10 += v * b9;\n  t11 += v * b10;\n  t12 += v * b11;\n  t13 += v * b12;\n  t14 += v * b13;\n  t15 += v * b14;\n  t16 += v * b15;\n  v = a[2];\n  t2 += v * b0;\n  t3 += v * b1;\n  t4 += v * b2;\n  t5 += v * b3;\n  t6 += v * b4;\n  t7 += v * b5;\n  t8 += v * b6;\n  t9 += v * b7;\n  t10 += v * b8;\n  t11 += v * b9;\n  t12 += v * b10;\n  t13 += v * b11;\n  t14 += v * b12;\n  t15 += v * b13;\n  t16 += v * b14;\n  t17 += v * b15;\n  v = a[3];\n  t3 += v * b0;\n  t4 += v * b1;\n  t5 += v * b2;\n  t6 += v * b3;\n  t7 += v * b4;\n  t8 += v * b5;\n  t9 += v * b6;\n  t10 += v * b7;\n  t11 += v * b8;\n  t12 += v * b9;\n  t13 += v * b10;\n  t14 += v * b11;\n  t15 += v * b12;\n  t16 += v * b13;\n  t17 += v * b14;\n  t18 += v * b15;\n  v = a[4];\n  t4 += v * b0;\n  t5 += v * b1;\n  t6 += v * b2;\n  t7 += v * b3;\n  t8 += v * b4;\n  t9 += v * b5;\n  t10 += v * b6;\n  t11 += v * b7;\n  t12 += v * b8;\n  t13 += v * b9;\n  t14 += v * b10;\n  t15 += v * b11;\n  t16 += v * b12;\n  t17 += v * b13;\n  t18 += v * b14;\n  t19 += v * b15;\n  v = a[5];\n  t5 += v * b0;\n  t6 += v * b1;\n  t7 += v * b2;\n  t8 += v * b3;\n  t9 += v * b4;\n  t10 += v * b5;\n  t11 += v * b6;\n  t12 += v * b7;\n  t13 += v * b8;\n  t14 += v * b9;\n  t15 += v * b10;\n  t16 += v * b11;\n  t17 += v * b12;\n  t18 += v * b13;\n  t19 += v * b14;\n  t20 += v * b15;\n  v = a[6];\n  t6 += v * b0;\n  t7 += v * b1;\n  t8 += v * b2;\n  t9 += v * b3;\n  t10 += v * b4;\n  t11 += v * b5;\n  t12 += v * b6;\n  t13 += v * b7;\n  t14 += v * b8;\n  t15 += v * b9;\n  t16 += v * b10;\n  t17 += v * b11;\n  t18 += v * b12;\n  t19 += v * b13;\n  t20 += v * b14;\n  t21 += v * b15;\n  v = a[7];\n  t7 += v * b0;\n  t8 += v * b1;\n  t9 += v * b2;\n  t10 += v * b3;\n  t11 += v * b4;\n  t12 += v * b5;\n  t13 += v * b6;\n  t14 += v * b7;\n  t15 += v * b8;\n  t16 += v * b9;\n  t17 += v * b10;\n  t18 += v * b11;\n  t19 += v * b12;\n  t20 += v * b13;\n  t21 += v * b14;\n  t22 += v * b15;\n  v = a[8];\n  t8 += v * b0;\n  t9 += v * b1;\n  t10 += v * b2;\n  t11 += v * b3;\n  t12 += v * b4;\n  t13 += v * b5;\n  t14 += v * b6;\n  t15 += v * b7;\n  t16 += v * b8;\n  t17 += v * b9;\n  t18 += v * b10;\n  t19 += v * b11;\n  t20 += v * b12;\n  t21 += v * b13;\n  t22 += v * b14;\n  t23 += v * b15;\n  v = a[9];\n  t9 += v * b0;\n  t10 += v * b1;\n  t11 += v * b2;\n  t12 += v * b3;\n  t13 += v * b4;\n  t14 += v * b5;\n  t15 += v * b6;\n  t16 += v * b7;\n  t17 += v * b8;\n  t18 += v * b9;\n  t19 += v * b10;\n  t20 += v * b11;\n  t21 += v * b12;\n  t22 += v * b13;\n  t23 += v * b14;\n  t24 += v * b15;\n  v = a[10];\n  t10 += v * b0;\n  t11 += v * b1;\n  t12 += v * b2;\n  t13 += v * b3;\n  t14 += v * b4;\n  t15 += v * b5;\n  t16 += v * b6;\n  t17 += v * b7;\n  t18 += v * b8;\n  t19 += v * b9;\n  t20 += v * b10;\n  t21 += v * b11;\n  t22 += v * b12;\n  t23 += v * b13;\n  t24 += v * b14;\n  t25 += v * b15;\n  v = a[11];\n  t11 += v * b0;\n  t12 += v * b1;\n  t13 += v * b2;\n  t14 += v * b3;\n  t15 += v * b4;\n  t16 += v * b5;\n  t17 += v * b6;\n  t18 += v * b7;\n  t19 += v * b8;\n  t20 += v * b9;\n  t21 += v * b10;\n  t22 += v * b11;\n  t23 += v * b12;\n  t24 += v * b13;\n  t25 += v * b14;\n  t26 += v * b15;\n  v = a[12];\n  t12 += v * b0;\n  t13 += v * b1;\n  t14 += v * b2;\n  t15 += v * b3;\n  t16 += v * b4;\n  t17 += v * b5;\n  t18 += v * b6;\n  t19 += v * b7;\n  t20 += v * b8;\n  t21 += v * b9;\n  t22 += v * b10;\n  t23 += v * b11;\n  t24 += v * b12;\n  t25 += v * b13;\n  t26 += v * b14;\n  t27 += v * b15;\n  v = a[13];\n  t13 += v * b0;\n  t14 += v * b1;\n  t15 += v * b2;\n  t16 += v * b3;\n  t17 += v * b4;\n  t18 += v * b5;\n  t19 += v * b6;\n  t20 += v * b7;\n  t21 += v * b8;\n  t22 += v * b9;\n  t23 += v * b10;\n  t24 += v * b11;\n  t25 += v * b12;\n  t26 += v * b13;\n  t27 += v * b14;\n  t28 += v * b15;\n  v = a[14];\n  t14 += v * b0;\n  t15 += v * b1;\n  t16 += v * b2;\n  t17 += v * b3;\n  t18 += v * b4;\n  t19 += v * b5;\n  t20 += v * b6;\n  t21 += v * b7;\n  t22 += v * b8;\n  t23 += v * b9;\n  t24 += v * b10;\n  t25 += v * b11;\n  t26 += v * b12;\n  t27 += v * b13;\n  t28 += v * b14;\n  t29 += v * b15;\n  v = a[15];\n  t15 += v * b0;\n  t16 += v * b1;\n  t17 += v * b2;\n  t18 += v * b3;\n  t19 += v * b4;\n  t20 += v * b5;\n  t21 += v * b6;\n  t22 += v * b7;\n  t23 += v * b8;\n  t24 += v * b9;\n  t25 += v * b10;\n  t26 += v * b11;\n  t27 += v * b12;\n  t28 += v * b13;\n  t29 += v * b14;\n  t30 += v * b15;\n\n  t0  += 38 * t16;\n  t1  += 38 * t17;\n  t2  += 38 * t18;\n  t3  += 38 * t19;\n  t4  += 38 * t20;\n  t5  += 38 * t21;\n  t6  += 38 * t22;\n  t7  += 38 * t23;\n  t8  += 38 * t24;\n  t9  += 38 * t25;\n  t10 += 38 * t26;\n  t11 += 38 * t27;\n  t12 += 38 * t28;\n  t13 += 38 * t29;\n  t14 += 38 * t30;\n  // t15 left as is\n\n  // first car\n  c = 1;\n  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;\n  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;\n  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;\n  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;\n  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;\n  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;\n  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;\n  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;\n  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;\n  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;\n  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\n  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\n  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\n  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\n  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\n  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\n  t0 += c-1 + 37 * (c-1);\n\n  // second car\n  c = 1;\n  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;\n  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;\n  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;\n  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;\n  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;\n  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;\n  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;\n  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;\n  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;\n  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;\n  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\n  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\n  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\n  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\n  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\n  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\n  t0 += c-1 + 37 * (c-1);\n\n  o[ 0] = t0;\n  o[ 1] = t1;\n  o[ 2] = t2;\n  o[ 3] = t3;\n  o[ 4] = t4;\n  o[ 5] = t5;\n  o[ 6] = t6;\n  o[ 7] = t7;\n  o[ 8] = t8;\n  o[ 9] = t9;\n  o[10] = t10;\n  o[11] = t11;\n  o[12] = t12;\n  o[13] = t13;\n  o[14] = t14;\n  o[15] = t15;\n}\n\nfunction S(o, a) {\n  M(o, a, a);\n}\n\nfunction inv25519(o, i) {\n  var c = gf();\n  var a;\n  for (a = 0; a < 16; a++) c[a] = i[a];\n  for (a = 253; a >= 0; a--) {\n    S(c, c);\n    if(a !== 2 && a !== 4) M(c, c, i);\n  }\n  for (a = 0; a < 16; a++) o[a] = c[a];\n}\n\nfunction pow2523(o, i) {\n  var c = gf();\n  var a;\n  for (a = 0; a < 16; a++) c[a] = i[a];\n  for (a = 250; a >= 0; a--) {\n      S(c, c);\n      if(a !== 1) M(c, c, i);\n  }\n  for (a = 0; a < 16; a++) o[a] = c[a];\n}\n\nfunction crypto_scalarmult(q, n, p) {\n  var z = new Uint8Array(32);\n  var x = new Float64Array(80), r, i;\n  var a = gf(), b = gf(), c = gf(),\n      d = gf(), e = gf(), f = gf();\n  for (i = 0; i < 31; i++) z[i] = n[i];\n  z[31]=(n[31]&127)|64;\n  z[0]&=248;\n  unpack25519(x,p);\n  for (i = 0; i < 16; i++) {\n    b[i]=x[i];\n    d[i]=a[i]=c[i]=0;\n  }\n  a[0]=d[0]=1;\n  for (i=254; i>=0; --i) {\n    r=(z[i>>>3]>>>(i&7))&1;\n    sel25519(a,b,r);\n    sel25519(c,d,r);\n    A(e,a,c);\n    Z(a,a,c);\n    A(c,b,d);\n    Z(b,b,d);\n    S(d,e);\n    S(f,a);\n    M(a,c,a);\n    M(c,b,e);\n    A(e,a,c);\n    Z(a,a,c);\n    S(b,a);\n    Z(c,d,f);\n    M(a,c,_121665);\n    A(a,a,d);\n    M(c,c,a);\n    M(a,d,f);\n    M(d,b,x);\n    S(b,e);\n    sel25519(a,b,r);\n    sel25519(c,d,r);\n  }\n  for (i = 0; i < 16; i++) {\n    x[i+16]=a[i];\n    x[i+32]=c[i];\n    x[i+48]=b[i];\n    x[i+64]=d[i];\n  }\n  var x32 = x.subarray(32);\n  var x16 = x.subarray(16);\n  inv25519(x32,x32);\n  M(x16,x16,x32);\n  pack25519(q,x16);\n  return 0;\n}\n\nfunction crypto_scalarmult_base(q, n) {\n  return crypto_scalarmult(q, n, _9);\n}\n\nfunction crypto_box_keypair(y, x) {\n  randombytes(x, 32);\n  return crypto_scalarmult_base(y, x);\n}\n\nfunction crypto_box_beforenm(k, y, x) {\n  var s = new Uint8Array(32);\n  crypto_scalarmult(s, x, y);\n  return crypto_core_hsalsa20(k, _0, s, sigma);\n}\n\nvar crypto_box_afternm = crypto_secretbox;\nvar crypto_box_open_afternm = crypto_secretbox_open;\n\nfunction crypto_box(c, m, d, n, y, x) {\n  var k = new Uint8Array(32);\n  crypto_box_beforenm(k, y, x);\n  return crypto_box_afternm(c, m, d, n, k);\n}\n\nfunction crypto_box_open(m, c, d, n, y, x) {\n  var k = new Uint8Array(32);\n  crypto_box_beforenm(k, y, x);\n  return crypto_box_open_afternm(m, c, d, n, k);\n}\n\nvar K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n];\n\nfunction crypto_hashblocks_hl(hh, hl, m, n) {\n  var wh = new Int32Array(16), wl = new Int32Array(16),\n      bh0, bh1, bh2, bh3, bh4, bh5, bh6, bh7,\n      bl0, bl1, bl2, bl3, bl4, bl5, bl6, bl7,\n      th, tl, i, j, h, l, a, b, c, d;\n\n  var ah0 = hh[0],\n      ah1 = hh[1],\n      ah2 = hh[2],\n      ah3 = hh[3],\n      ah4 = hh[4],\n      ah5 = hh[5],\n      ah6 = hh[6],\n      ah7 = hh[7],\n\n      al0 = hl[0],\n      al1 = hl[1],\n      al2 = hl[2],\n      al3 = hl[3],\n      al4 = hl[4],\n      al5 = hl[5],\n      al6 = hl[6],\n      al7 = hl[7];\n\n  var pos = 0;\n  while (n >= 128) {\n    for (i = 0; i < 16; i++) {\n      j = 8 * i + pos;\n      wh[i] = (m[j+0] << 24) | (m[j+1] << 16) | (m[j+2] << 8) | m[j+3];\n      wl[i] = (m[j+4] << 24) | (m[j+5] << 16) | (m[j+6] << 8) | m[j+7];\n    }\n    for (i = 0; i < 80; i++) {\n      bh0 = ah0;\n      bh1 = ah1;\n      bh2 = ah2;\n      bh3 = ah3;\n      bh4 = ah4;\n      bh5 = ah5;\n      bh6 = ah6;\n      bh7 = ah7;\n\n      bl0 = al0;\n      bl1 = al1;\n      bl2 = al2;\n      bl3 = al3;\n      bl4 = al4;\n      bl5 = al5;\n      bl6 = al6;\n      bl7 = al7;\n\n      // add\n      h = ah7;\n      l = al7;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      // Sigma1\n      h = ((ah4 >>> 14) | (al4 << (32-14))) ^ ((ah4 >>> 18) | (al4 << (32-18))) ^ ((al4 >>> (41-32)) | (ah4 << (32-(41-32))));\n      l = ((al4 >>> 14) | (ah4 << (32-14))) ^ ((al4 >>> 18) | (ah4 << (32-18))) ^ ((ah4 >>> (41-32)) | (al4 << (32-(41-32))));\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // Ch\n      h = (ah4 & ah5) ^ (~ah4 & ah6);\n      l = (al4 & al5) ^ (~al4 & al6);\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // K\n      h = K[i*2];\n      l = K[i*2+1];\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // w\n      h = wh[i%16];\n      l = wl[i%16];\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      th = c & 0xffff | d << 16;\n      tl = a & 0xffff | b << 16;\n\n      // add\n      h = th;\n      l = tl;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      // Sigma0\n      h = ((ah0 >>> 28) | (al0 << (32-28))) ^ ((al0 >>> (34-32)) | (ah0 << (32-(34-32)))) ^ ((al0 >>> (39-32)) | (ah0 << (32-(39-32))));\n      l = ((al0 >>> 28) | (ah0 << (32-28))) ^ ((ah0 >>> (34-32)) | (al0 << (32-(34-32)))) ^ ((ah0 >>> (39-32)) | (al0 << (32-(39-32))));\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // Maj\n      h = (ah0 & ah1) ^ (ah0 & ah2) ^ (ah1 & ah2);\n      l = (al0 & al1) ^ (al0 & al2) ^ (al1 & al2);\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      bh7 = (c & 0xffff) | (d << 16);\n      bl7 = (a & 0xffff) | (b << 16);\n\n      // add\n      h = bh3;\n      l = bl3;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      h = th;\n      l = tl;\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      bh3 = (c & 0xffff) | (d << 16);\n      bl3 = (a & 0xffff) | (b << 16);\n\n      ah1 = bh0;\n      ah2 = bh1;\n      ah3 = bh2;\n      ah4 = bh3;\n      ah5 = bh4;\n      ah6 = bh5;\n      ah7 = bh6;\n      ah0 = bh7;\n\n      al1 = bl0;\n      al2 = bl1;\n      al3 = bl2;\n      al4 = bl3;\n      al5 = bl4;\n      al6 = bl5;\n      al7 = bl6;\n      al0 = bl7;\n\n      if (i%16 === 15) {\n        for (j = 0; j < 16; j++) {\n          // add\n          h = wh[j];\n          l = wl[j];\n\n          a = l & 0xffff; b = l >>> 16;\n          c = h & 0xffff; d = h >>> 16;\n\n          h = wh[(j+9)%16];\n          l = wl[(j+9)%16];\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          // sigma0\n          th = wh[(j+1)%16];\n          tl = wl[(j+1)%16];\n          h = ((th >>> 1) | (tl << (32-1))) ^ ((th >>> 8) | (tl << (32-8))) ^ (th >>> 7);\n          l = ((tl >>> 1) | (th << (32-1))) ^ ((tl >>> 8) | (th << (32-8))) ^ ((tl >>> 7) | (th << (32-7)));\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          // sigma1\n          th = wh[(j+14)%16];\n          tl = wl[(j+14)%16];\n          h = ((th >>> 19) | (tl << (32-19))) ^ ((tl >>> (61-32)) | (th << (32-(61-32)))) ^ (th >>> 6);\n          l = ((tl >>> 19) | (th << (32-19))) ^ ((th >>> (61-32)) | (tl << (32-(61-32)))) ^ ((tl >>> 6) | (th << (32-6)));\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          b += a >>> 16;\n          c += b >>> 16;\n          d += c >>> 16;\n\n          wh[j] = (c & 0xffff) | (d << 16);\n          wl[j] = (a & 0xffff) | (b << 16);\n        }\n      }\n    }\n\n    // add\n    h = ah0;\n    l = al0;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[0];\n    l = hl[0];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[0] = ah0 = (c & 0xffff) | (d << 16);\n    hl[0] = al0 = (a & 0xffff) | (b << 16);\n\n    h = ah1;\n    l = al1;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[1];\n    l = hl[1];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[1] = ah1 = (c & 0xffff) | (d << 16);\n    hl[1] = al1 = (a & 0xffff) | (b << 16);\n\n    h = ah2;\n    l = al2;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[2];\n    l = hl[2];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[2] = ah2 = (c & 0xffff) | (d << 16);\n    hl[2] = al2 = (a & 0xffff) | (b << 16);\n\n    h = ah3;\n    l = al3;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[3];\n    l = hl[3];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[3] = ah3 = (c & 0xffff) | (d << 16);\n    hl[3] = al3 = (a & 0xffff) | (b << 16);\n\n    h = ah4;\n    l = al4;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[4];\n    l = hl[4];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[4] = ah4 = (c & 0xffff) | (d << 16);\n    hl[4] = al4 = (a & 0xffff) | (b << 16);\n\n    h = ah5;\n    l = al5;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[5];\n    l = hl[5];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[5] = ah5 = (c & 0xffff) | (d << 16);\n    hl[5] = al5 = (a & 0xffff) | (b << 16);\n\n    h = ah6;\n    l = al6;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[6];\n    l = hl[6];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[6] = ah6 = (c & 0xffff) | (d << 16);\n    hl[6] = al6 = (a & 0xffff) | (b << 16);\n\n    h = ah7;\n    l = al7;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[7];\n    l = hl[7];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[7] = ah7 = (c & 0xffff) | (d << 16);\n    hl[7] = al7 = (a & 0xffff) | (b << 16);\n\n    pos += 128;\n    n -= 128;\n  }\n\n  return n;\n}\n\nfunction crypto_hash(out, m, n) {\n  var hh = new Int32Array(8),\n      hl = new Int32Array(8),\n      x = new Uint8Array(256),\n      i, b = n;\n\n  hh[0] = 0x6a09e667;\n  hh[1] = 0xbb67ae85;\n  hh[2] = 0x3c6ef372;\n  hh[3] = 0xa54ff53a;\n  hh[4] = 0x510e527f;\n  hh[5] = 0x9b05688c;\n  hh[6] = 0x1f83d9ab;\n  hh[7] = 0x5be0cd19;\n\n  hl[0] = 0xf3bcc908;\n  hl[1] = 0x84caa73b;\n  hl[2] = 0xfe94f82b;\n  hl[3] = 0x5f1d36f1;\n  hl[4] = 0xade682d1;\n  hl[5] = 0x2b3e6c1f;\n  hl[6] = 0xfb41bd6b;\n  hl[7] = 0x137e2179;\n\n  crypto_hashblocks_hl(hh, hl, m, n);\n  n %= 128;\n\n  for (i = 0; i < n; i++) x[i] = m[b-n+i];\n  x[n] = 128;\n\n  n = 256-128*(n<112?1:0);\n  x[n-9] = 0;\n  ts64(x, n-8,  (b / 0x20000000) | 0, b << 3);\n  crypto_hashblocks_hl(hh, hl, x, n);\n\n  for (i = 0; i < 8; i++) ts64(out, 8*i, hh[i], hl[i]);\n\n  return 0;\n}\n\nfunction add(p, q) {\n  var a = gf(), b = gf(), c = gf(),\n      d = gf(), e = gf(), f = gf(),\n      g = gf(), h = gf(), t = gf();\n\n  Z(a, p[1], p[0]);\n  Z(t, q[1], q[0]);\n  M(a, a, t);\n  A(b, p[0], p[1]);\n  A(t, q[0], q[1]);\n  M(b, b, t);\n  M(c, p[3], q[3]);\n  M(c, c, D2);\n  M(d, p[2], q[2]);\n  A(d, d, d);\n  Z(e, b, a);\n  Z(f, d, c);\n  A(g, d, c);\n  A(h, b, a);\n\n  M(p[0], e, f);\n  M(p[1], h, g);\n  M(p[2], g, f);\n  M(p[3], e, h);\n}\n\nfunction cswap(p, q, b) {\n  var i;\n  for (i = 0; i < 4; i++) {\n    sel25519(p[i], q[i], b);\n  }\n}\n\nfunction pack(r, p) {\n  var tx = gf(), ty = gf(), zi = gf();\n  inv25519(zi, p[2]);\n  M(tx, p[0], zi);\n  M(ty, p[1], zi);\n  pack25519(r, ty);\n  r[31] ^= par25519(tx) << 7;\n}\n\nfunction scalarmult(p, q, s) {\n  var b, i;\n  set25519(p[0], gf0);\n  set25519(p[1], gf1);\n  set25519(p[2], gf1);\n  set25519(p[3], gf0);\n  for (i = 255; i >= 0; --i) {\n    b = (s[(i/8)|0] >> (i&7)) & 1;\n    cswap(p, q, b);\n    add(q, p);\n    add(p, p);\n    cswap(p, q, b);\n  }\n}\n\nfunction scalarbase(p, s) {\n  var q = [gf(), gf(), gf(), gf()];\n  set25519(q[0], X);\n  set25519(q[1], Y);\n  set25519(q[2], gf1);\n  M(q[3], X, Y);\n  scalarmult(p, q, s);\n}\n\nfunction crypto_sign_keypair(pk, sk, seeded) {\n  var d = new Uint8Array(64);\n  var p = [gf(), gf(), gf(), gf()];\n  var i;\n\n  if (!seeded) randombytes(sk, 32);\n  crypto_hash(d, sk, 32);\n  d[0] &= 248;\n  d[31] &= 127;\n  d[31] |= 64;\n\n  scalarbase(p, d);\n  pack(pk, p);\n\n  for (i = 0; i < 32; i++) sk[i+32] = pk[i];\n  return 0;\n}\n\nvar L = new Float64Array([0xed, 0xd3, 0xf5, 0x5c, 0x1a, 0x63, 0x12, 0x58, 0xd6, 0x9c, 0xf7, 0xa2, 0xde, 0xf9, 0xde, 0x14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x10]);\n\nfunction modL(r, x) {\n  var carry, i, j, k;\n  for (i = 63; i >= 32; --i) {\n    carry = 0;\n    for (j = i - 32, k = i - 12; j < k; ++j) {\n      x[j] += carry - 16 * x[i] * L[j - (i - 32)];\n      carry = Math.floor((x[j] + 128) / 256);\n      x[j] -= carry * 256;\n    }\n    x[j] += carry;\n    x[i] = 0;\n  }\n  carry = 0;\n  for (j = 0; j < 32; j++) {\n    x[j] += carry - (x[31] >> 4) * L[j];\n    carry = x[j] >> 8;\n    x[j] &= 255;\n  }\n  for (j = 0; j < 32; j++) x[j] -= carry * L[j];\n  for (i = 0; i < 32; i++) {\n    x[i+1] += x[i] >> 8;\n    r[i] = x[i] & 255;\n  }\n}\n\nfunction reduce(r) {\n  var x = new Float64Array(64), i;\n  for (i = 0; i < 64; i++) x[i] = r[i];\n  for (i = 0; i < 64; i++) r[i] = 0;\n  modL(r, x);\n}\n\n// Note: difference from C - smlen returned, not passed as argument.\nfunction crypto_sign(sm, m, n, sk) {\n  var d = new Uint8Array(64), h = new Uint8Array(64), r = new Uint8Array(64);\n  var i, j, x = new Float64Array(64);\n  var p = [gf(), gf(), gf(), gf()];\n\n  crypto_hash(d, sk, 32);\n  d[0] &= 248;\n  d[31] &= 127;\n  d[31] |= 64;\n\n  var smlen = n + 64;\n  for (i = 0; i < n; i++) sm[64 + i] = m[i];\n  for (i = 0; i < 32; i++) sm[32 + i] = d[32 + i];\n\n  crypto_hash(r, sm.subarray(32), n+32);\n  reduce(r);\n  scalarbase(p, r);\n  pack(sm, p);\n\n  for (i = 32; i < 64; i++) sm[i] = sk[i];\n  crypto_hash(h, sm, n + 64);\n  reduce(h);\n\n  for (i = 0; i < 64; i++) x[i] = 0;\n  for (i = 0; i < 32; i++) x[i] = r[i];\n  for (i = 0; i < 32; i++) {\n    for (j = 0; j < 32; j++) {\n      x[i+j] += h[i] * d[j];\n    }\n  }\n\n  modL(sm.subarray(32), x);\n  return smlen;\n}\n\nfunction unpackneg(r, p) {\n  var t = gf(), chk = gf(), num = gf(),\n      den = gf(), den2 = gf(), den4 = gf(),\n      den6 = gf();\n\n  set25519(r[2], gf1);\n  unpack25519(r[1], p);\n  S(num, r[1]);\n  M(den, num, D);\n  Z(num, num, r[2]);\n  A(den, r[2], den);\n\n  S(den2, den);\n  S(den4, den2);\n  M(den6, den4, den2);\n  M(t, den6, num);\n  M(t, t, den);\n\n  pow2523(t, t);\n  M(t, t, num);\n  M(t, t, den);\n  M(t, t, den);\n  M(r[0], t, den);\n\n  S(chk, r[0]);\n  M(chk, chk, den);\n  if (neq25519(chk, num)) M(r[0], r[0], I);\n\n  S(chk, r[0]);\n  M(chk, chk, den);\n  if (neq25519(chk, num)) return -1;\n\n  if (par25519(r[0]) === (p[31]>>7)) Z(r[0], gf0, r[0]);\n\n  M(r[3], r[0], r[1]);\n  return 0;\n}\n\nfunction crypto_sign_open(m, sm, n, pk) {\n  var i;\n  var t = new Uint8Array(32), h = new Uint8Array(64);\n  var p = [gf(), gf(), gf(), gf()],\n      q = [gf(), gf(), gf(), gf()];\n\n  if (n < 64) return -1;\n\n  if (unpackneg(q, pk)) return -1;\n\n  for (i = 0; i < n; i++) m[i] = sm[i];\n  for (i = 0; i < 32; i++) m[i+32] = pk[i];\n  crypto_hash(h, m, n);\n  reduce(h);\n  scalarmult(p, q, h);\n\n  scalarbase(q, sm.subarray(32));\n  add(p, q);\n  pack(t, p);\n\n  n -= 64;\n  if (crypto_verify_32(sm, 0, t, 0)) {\n    for (i = 0; i < n; i++) m[i] = 0;\n    return -1;\n  }\n\n  for (i = 0; i < n; i++) m[i] = sm[i + 64];\n  return n;\n}\n\nvar crypto_secretbox_KEYBYTES = 32,\n    crypto_secretbox_NONCEBYTES = 24,\n    crypto_secretbox_ZEROBYTES = 32,\n    crypto_secretbox_BOXZEROBYTES = 16,\n    crypto_scalarmult_BYTES = 32,\n    crypto_scalarmult_SCALARBYTES = 32,\n    crypto_box_PUBLICKEYBYTES = 32,\n    crypto_box_SECRETKEYBYTES = 32,\n    crypto_box_BEFORENMBYTES = 32,\n    crypto_box_NONCEBYTES = crypto_secretbox_NONCEBYTES,\n    crypto_box_ZEROBYTES = crypto_secretbox_ZEROBYTES,\n    crypto_box_BOXZEROBYTES = crypto_secretbox_BOXZEROBYTES,\n    crypto_sign_BYTES = 64,\n    crypto_sign_PUBLICKEYBYTES = 32,\n    crypto_sign_SECRETKEYBYTES = 64,\n    crypto_sign_SEEDBYTES = 32,\n    crypto_hash_BYTES = 64;\n\nnacl.lowlevel = {\n  crypto_core_hsalsa20: crypto_core_hsalsa20,\n  crypto_stream_xor: crypto_stream_xor,\n  crypto_stream: crypto_stream,\n  crypto_stream_salsa20_xor: crypto_stream_salsa20_xor,\n  crypto_stream_salsa20: crypto_stream_salsa20,\n  crypto_onetimeauth: crypto_onetimeauth,\n  crypto_onetimeauth_verify: crypto_onetimeauth_verify,\n  crypto_verify_16: crypto_verify_16,\n  crypto_verify_32: crypto_verify_32,\n  crypto_secretbox: crypto_secretbox,\n  crypto_secretbox_open: crypto_secretbox_open,\n  crypto_scalarmult: crypto_scalarmult,\n  crypto_scalarmult_base: crypto_scalarmult_base,\n  crypto_box_beforenm: crypto_box_beforenm,\n  crypto_box_afternm: crypto_box_afternm,\n  crypto_box: crypto_box,\n  crypto_box_open: crypto_box_open,\n  crypto_box_keypair: crypto_box_keypair,\n  crypto_hash: crypto_hash,\n  crypto_sign: crypto_sign,\n  crypto_sign_keypair: crypto_sign_keypair,\n  crypto_sign_open: crypto_sign_open,\n\n  crypto_secretbox_KEYBYTES: crypto_secretbox_KEYBYTES,\n  crypto_secretbox_NONCEBYTES: crypto_secretbox_NONCEBYTES,\n  crypto_secretbox_ZEROBYTES: crypto_secretbox_ZEROBYTES,\n  crypto_secretbox_BOXZEROBYTES: crypto_secretbox_BOXZEROBYTES,\n  crypto_scalarmult_BYTES: crypto_scalarmult_BYTES,\n  crypto_scalarmult_SCALARBYTES: crypto_scalarmult_SCALARBYTES,\n  crypto_box_PUBLICKEYBYTES: crypto_box_PUBLICKEYBYTES,\n  crypto_box_SECRETKEYBYTES: crypto_box_SECRETKEYBYTES,\n  crypto_box_BEFORENMBYTES: crypto_box_BEFORENMBYTES,\n  crypto_box_NONCEBYTES: crypto_box_NONCEBYTES,\n  crypto_box_ZEROBYTES: crypto_box_ZEROBYTES,\n  crypto_box_BOXZEROBYTES: crypto_box_BOXZEROBYTES,\n  crypto_sign_BYTES: crypto_sign_BYTES,\n  crypto_sign_PUBLICKEYBYTES: crypto_sign_PUBLICKEYBYTES,\n  crypto_sign_SECRETKEYBYTES: crypto_sign_SECRETKEYBYTES,\n  crypto_sign_SEEDBYTES: crypto_sign_SEEDBYTES,\n  crypto_hash_BYTES: crypto_hash_BYTES,\n\n  gf: gf,\n  D: D,\n  L: L,\n  pack25519: pack25519,\n  unpack25519: unpack25519,\n  M: M,\n  A: A,\n  S: S,\n  Z: Z,\n  pow2523: pow2523,\n  add: add,\n  set25519: set25519,\n  modL: modL,\n  scalarmult: scalarmult,\n  scalarbase: scalarbase,\n};\n\n/* High-level API */\n\nfunction checkLengths(k, n) {\n  if (k.length !== crypto_secretbox_KEYBYTES) throw new Error('bad key size');\n  if (n.length !== crypto_secretbox_NONCEBYTES) throw new Error('bad nonce size');\n}\n\nfunction checkBoxLengths(pk, sk) {\n  if (pk.length !== crypto_box_PUBLICKEYBYTES) throw new Error('bad public key size');\n  if (sk.length !== crypto_box_SECRETKEYBYTES) throw new Error('bad secret key size');\n}\n\nfunction checkArrayTypes() {\n  for (var i = 0; i < arguments.length; i++) {\n    if (!(arguments[i] instanceof Uint8Array))\n      throw new TypeError('unexpected type, use Uint8Array');\n  }\n}\n\nfunction cleanup(arr) {\n  for (var i = 0; i < arr.length; i++) arr[i] = 0;\n}\n\nnacl.randomBytes = function(n) {\n  var b = new Uint8Array(n);\n  randombytes(b, n);\n  return b;\n};\n\nnacl.secretbox = function(msg, nonce, key) {\n  checkArrayTypes(msg, nonce, key);\n  checkLengths(key, nonce);\n  var m = new Uint8Array(crypto_secretbox_ZEROBYTES + msg.length);\n  var c = new Uint8Array(m.length);\n  for (var i = 0; i < msg.length; i++) m[i+crypto_secretbox_ZEROBYTES] = msg[i];\n  crypto_secretbox(c, m, m.length, nonce, key);\n  return c.subarray(crypto_secretbox_BOXZEROBYTES);\n};\n\nnacl.secretbox.open = function(box, nonce, key) {\n  checkArrayTypes(box, nonce, key);\n  checkLengths(key, nonce);\n  var c = new Uint8Array(crypto_secretbox_BOXZEROBYTES + box.length);\n  var m = new Uint8Array(c.length);\n  for (var i = 0; i < box.length; i++) c[i+crypto_secretbox_BOXZEROBYTES] = box[i];\n  if (c.length < 32) return null;\n  if (crypto_secretbox_open(m, c, c.length, nonce, key) !== 0) return null;\n  return m.subarray(crypto_secretbox_ZEROBYTES);\n};\n\nnacl.secretbox.keyLength = crypto_secretbox_KEYBYTES;\nnacl.secretbox.nonceLength = crypto_secretbox_NONCEBYTES;\nnacl.secretbox.overheadLength = crypto_secretbox_BOXZEROBYTES;\n\nnacl.scalarMult = function(n, p) {\n  checkArrayTypes(n, p);\n  if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');\n  if (p.length !== crypto_scalarmult_BYTES) throw new Error('bad p size');\n  var q = new Uint8Array(crypto_scalarmult_BYTES);\n  crypto_scalarmult(q, n, p);\n  return q;\n};\n\nnacl.scalarMult.base = function(n) {\n  checkArrayTypes(n);\n  if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');\n  var q = new Uint8Array(crypto_scalarmult_BYTES);\n  crypto_scalarmult_base(q, n);\n  return q;\n};\n\nnacl.scalarMult.scalarLength = crypto_scalarmult_SCALARBYTES;\nnacl.scalarMult.groupElementLength = crypto_scalarmult_BYTES;\n\nnacl.box = function(msg, nonce, publicKey, secretKey) {\n  var k = nacl.box.before(publicKey, secretKey);\n  return nacl.secretbox(msg, nonce, k);\n};\n\nnacl.box.before = function(publicKey, secretKey) {\n  checkArrayTypes(publicKey, secretKey);\n  checkBoxLengths(publicKey, secretKey);\n  var k = new Uint8Array(crypto_box_BEFORENMBYTES);\n  crypto_box_beforenm(k, publicKey, secretKey);\n  return k;\n};\n\nnacl.box.after = nacl.secretbox;\n\nnacl.box.open = function(msg, nonce, publicKey, secretKey) {\n  var k = nacl.box.before(publicKey, secretKey);\n  return nacl.secretbox.open(msg, nonce, k);\n};\n\nnacl.box.open.after = nacl.secretbox.open;\n\nnacl.box.keyPair = function() {\n  var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_box_SECRETKEYBYTES);\n  crypto_box_keypair(pk, sk);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.box.keyPair.fromSecretKey = function(secretKey) {\n  checkArrayTypes(secretKey);\n  if (secretKey.length !== crypto_box_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);\n  crypto_scalarmult_base(pk, secretKey);\n  return {publicKey: pk, secretKey: new Uint8Array(secretKey)};\n};\n\nnacl.box.publicKeyLength = crypto_box_PUBLICKEYBYTES;\nnacl.box.secretKeyLength = crypto_box_SECRETKEYBYTES;\nnacl.box.sharedKeyLength = crypto_box_BEFORENMBYTES;\nnacl.box.nonceLength = crypto_box_NONCEBYTES;\nnacl.box.overheadLength = nacl.secretbox.overheadLength;\n\nnacl.sign = function(msg, secretKey) {\n  checkArrayTypes(msg, secretKey);\n  if (secretKey.length !== crypto_sign_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var signedMsg = new Uint8Array(crypto_sign_BYTES+msg.length);\n  crypto_sign(signedMsg, msg, msg.length, secretKey);\n  return signedMsg;\n};\n\nnacl.sign.open = function(signedMsg, publicKey) {\n  checkArrayTypes(signedMsg, publicKey);\n  if (publicKey.length !== crypto_sign_PUBLICKEYBYTES)\n    throw new Error('bad public key size');\n  var tmp = new Uint8Array(signedMsg.length);\n  var mlen = crypto_sign_open(tmp, signedMsg, signedMsg.length, publicKey);\n  if (mlen < 0) return null;\n  var m = new Uint8Array(mlen);\n  for (var i = 0; i < m.length; i++) m[i] = tmp[i];\n  return m;\n};\n\nnacl.sign.detached = function(msg, secretKey) {\n  var signedMsg = nacl.sign(msg, secretKey);\n  var sig = new Uint8Array(crypto_sign_BYTES);\n  for (var i = 0; i < sig.length; i++) sig[i] = signedMsg[i];\n  return sig;\n};\n\nnacl.sign.detached.verify = function(msg, sig, publicKey) {\n  checkArrayTypes(msg, sig, publicKey);\n  if (sig.length !== crypto_sign_BYTES)\n    throw new Error('bad signature size');\n  if (publicKey.length !== crypto_sign_PUBLICKEYBYTES)\n    throw new Error('bad public key size');\n  var sm = new Uint8Array(crypto_sign_BYTES + msg.length);\n  var m = new Uint8Array(crypto_sign_BYTES + msg.length);\n  var i;\n  for (i = 0; i < crypto_sign_BYTES; i++) sm[i] = sig[i];\n  for (i = 0; i < msg.length; i++) sm[i+crypto_sign_BYTES] = msg[i];\n  return (crypto_sign_open(m, sm, sm.length, publicKey) >= 0);\n};\n\nnacl.sign.keyPair = function() {\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);\n  crypto_sign_keypair(pk, sk);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.sign.keyPair.fromSecretKey = function(secretKey) {\n  checkArrayTypes(secretKey);\n  if (secretKey.length !== crypto_sign_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  for (var i = 0; i < pk.length; i++) pk[i] = secretKey[32+i];\n  return {publicKey: pk, secretKey: new Uint8Array(secretKey)};\n};\n\nnacl.sign.keyPair.fromSeed = function(seed) {\n  checkArrayTypes(seed);\n  if (seed.length !== crypto_sign_SEEDBYTES)\n    throw new Error('bad seed size');\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);\n  for (var i = 0; i < 32; i++) sk[i] = seed[i];\n  crypto_sign_keypair(pk, sk, true);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.sign.publicKeyLength = crypto_sign_PUBLICKEYBYTES;\nnacl.sign.secretKeyLength = crypto_sign_SECRETKEYBYTES;\nnacl.sign.seedLength = crypto_sign_SEEDBYTES;\nnacl.sign.signatureLength = crypto_sign_BYTES;\n\nnacl.hash = function(msg) {\n  checkArrayTypes(msg);\n  var h = new Uint8Array(crypto_hash_BYTES);\n  crypto_hash(h, msg, msg.length);\n  return h;\n};\n\nnacl.hash.hashLength = crypto_hash_BYTES;\n\nnacl.verify = function(x, y) {\n  checkArrayTypes(x, y);\n  // Zero length arguments are considered not equal.\n  if (x.length === 0 || y.length === 0) return false;\n  if (x.length !== y.length) return false;\n  return (vn(x, 0, y, 0, x.length) === 0) ? true : false;\n};\n\nnacl.setPRNG = function(fn) {\n  randombytes = fn;\n};\n\n(function() {\n  // Initialize PRNG if environment provides CSPRNG.\n  // If not, methods calling randombytes will throw.\n  var crypto = typeof self !== 'undefined' ? (self.crypto || self.msCrypto) : null;\n  if (crypto && crypto.getRandomValues) {\n    // Browsers.\n    var QUOTA = 65536;\n    nacl.setPRNG(function(x, n) {\n      var i, v = new Uint8Array(n);\n      for (i = 0; i < n; i += QUOTA) {\n        crypto.getRandomValues(v.subarray(i, i + Math.min(n - i, QUOTA)));\n      }\n      for (i = 0; i < n; i++) x[i] = v[i];\n      cleanup(v);\n    });\n  } else if (typeof require !== 'undefined') {\n    // Node.js.\n    crypto = require('crypto');\n    if (crypto && crypto.randomBytes) {\n      nacl.setPRNG(function(x, n) {\n        var i, v = crypto.randomBytes(n);\n        for (i = 0; i < n; i++) x[i] = v[i];\n        cleanup(v);\n      });\n    }\n  }\n})();\n\n})(typeof module !== 'undefined' && module.exports ? module.exports : (self.nacl = self.nacl || {}));\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/* ------------------------------------------------------------ */\n/* ---- API for GET Application Natural Non Fungible Tokens --- */\n/* ---------- MIT License  ------------------------------------ */\n/* ------------------------------------------------------------ */\n\nvar nacl = require(\"tweetnacl\");\nvar sha256 = require(\"sha256\");\nvar base32 = require(\"base32.js\");\n\nimport { Buffer } from 'buffer/';\nwindow.Buffer = Buffer;\n\nconst SLS32=['A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z','2','3','4','5','6','7'];\nconst  poly=0x1021;\n\nfunction crc16s(addr, num, crc)\n{\nvar i,j=0;\n\nfor (; num>0; num--)             /* Step through bytes in memory */\n  {\n  crc = crc ^ (addr[j++] << 8);      /* Fetch byte from memory, XOR into CRC top byte*/\n  for (i=0; i<8; i++)              /* Prepare to rotate 8 bits */\n    {\n    crc = crc << 1;                /* rotate */\n    if (crc & 0x10000)             /* bit 15 was set (now bit 16)... */\n      crc = (crc ^ poly) & 0xFFFF; /* XOR with XMODEM polynomic */\n                                   /* and ensure CRC remains 16-bit value */\n    }                              /* Loop for 8 bits */\n  }                                /* Loop until num=0 */\n  return(crc);                     /* Return updated CRC */\n}\n\nfunction base32_encode(data) {\n  if (data.length < 0 || data.length > (1 << 28)) {\n    return 0;\n  }\n  var count = 0;\n  var result=\"\";\n  if (data.length > 0) {\n    var buffer = data[0];\n    var next = 1;\n    var bitsLeft = 8;\n    while (bitsLeft > 0 || next < data.length) {\n      if (bitsLeft < 5) {\n        if (next < data.length) {\n          buffer <<= 8;\n          buffer |= data[next++] & 0xFF;\n          bitsLeft += 8;\n        } else {\n          var pad = 5 - bitsLeft;\n          buffer <<= pad;\n          bitsLeft += pad;\n        }\n      }\n      var index = 0x1F & (buffer >> (bitsLeft - 5));\n      bitsLeft -= 5;\n      result=result+SLS32[index];count++;\n    }\n  }\n  return result;\n}\n\nfunction  base32_decode(encoded) {\n       var decoder = new base32.Decoder({ type: \"rfc4648\", lc: true});\n        return decoder.write(encoded).finalize();\n\n}\n\nfunction zeroPad(num, places) {\n  var zero = places - num.toString().length + 1;\n  return Array(+(zero > 0 && zero)).join(\"0\") + num;\n}\n\nfunction getPUBFromStr(bytes64){\n  const  buff = Buffer.from(bytes64, 'hex');\n  var hashHex = \"30\" + buff.toString('hex');  //+\"0000\";\n  var hashBytes = Buffer.from(hashHex, 'hex');\n  var crc = 0 ;\n  crc = crc16s(hashBytes, 33, crc);\n  crc = ((crc & 0xFF) << 8)|((crc >> 8) & 0xFF);\n  var PCRC=zeroPad(crc.toString(16), 4);\n  hashHex = \"30\" + buff.toString('hex')+ PCRC ;\n  hashBytes = Buffer.from(hashHex, 'hex');\n  const hashStr = base32_encode(hashBytes);\n  return hashStr;\n}\n\n\nfunction getSECFromStr(bytes64){\n  const  buff = Buffer.from(bytes64, 'hex');\n  var hashHex = \"90\" + buff.toString('hex');  //+\"0000\";\n  var hashBytes = Buffer.from(hashHex, 'hex');\n  var crc = 0 ;\n  crc = crc16s(hashBytes, 33, crc);\n  crc = ((crc & 0xFF) << 8)|((crc >> 8) & 0xFF);\n  var PCRC=zeroPad(crc.toString(16), 4);\n  hashHex = \"90\" + buff.toString('hex')+ PCRC ;\n  hashBytes = Buffer.from(hashHex, 'hex');\n  const hashStr = base32_encode(hashBytes);\n  return hashStr;\n}\n\n\nfunction getHashFromSEC(PRK){\n  var decoder = new base32.Decoder({ type: \"rfc4648\", lc: true});\n  var bsec = decoder.write(PRK).finalize();\n  const hsec=bsec.toString('hex');\n  var hashBytes = Buffer.from(hsec.substring(0,66), 'hex');\n  var crc = 0 ;\n  crc = crc16s(hashBytes, 33, crc);\n  crc = ((crc & 0xFF) << 8)|((crc >> 8) & 0xFF);\n  var PCRC=zeroPad(crc.toString(16), 4);\n  if(PCRC == hsec.substring(2).substring(64))\n     return hsec.substring(2).substring(0,64)\n   else return \"\";\n}\n\nfunction format(data) {\n  return new Buffer.from(data);\n}\n\n// (Uint8Array | String) -> String\nfunction bytesToString(bytes) {\n      if (typeof bytes === \"string\") {\n        return bytes;\n      } else {\n        var str = \"\";\n        for (var i = 0; i < bytes.length; ++i) {\n          str += String.fromCharCode(bytes[i]);\n        }\n        return str;\n      }\n}\n\n// String -> Uint8Array\nfunction stringToBytes(string) {\n      var bytes = new Uint8Array(string.length);\n      for (var i = 0; i < string.length; ++i) {\n        bytes[i] = string.charCodeAt(i);\n      }\n      return bytes;\n}\n\n// Uint8Array -> String\nvar toBase58 = (function() {\n    var ALPHABET = \"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz\";\n    return function(buffer) {\n        if (buffer.length === 0) {\n          return \"\";\n        }\n        var digits = [0];\n        var i = 0;\n        while (i < buffer.length) {\n          var j = 0;\n          var carry = 0;\n          while (j < digits.length) {\n            digits[j] <<= 8;\n            j++;\n          }\n          digits[0] += buffer[i];\n          j = 0;\n          while (j < digits.length) {\n            digits[j] += carry;\n            carry = (digits[j] / 58) | 0;\n            digits[j] %= 58;\n            ++j;\n          }\n          while (carry) {\n            digits.push(carry % 58);\n            carry = (carry / 58) | 0;\n          }\n          i++;\n        }\n        i = 0;\n        while (buffer[i] === 0 && i < buffer.length - 1) {\n          digits.push(0);\n          i++;\n        }\n        return digits.reverse().map(function(digit) {\n          return ALPHABET[digit];\n        }).join(\"\");\n      };\n})();\n\n// HexString -> Promise CID\nfunction cid1(bytes) {\n      return nanoSha256(bytes).then(function(hash) { \n        var hex = \"01551220\" + hash;\n        var bytes = new Uint8Array(hex.length / 2);\n        for (var i = 0; i < hex.length; i += 2) {\n          bytes[i / 2] = parseInt(hex.slice(i, i + 2), 16);\n        }\n        return \"z\" + toBase58(bytes);\n      });\n}\n\nfunction cid2(bytes) {\n      return nanoSha256(bytes).then(function(hash) { \n        var hex = \"01551220\" + hash;\n\n        var bytes = new Uint8Array(hex.length / 2);\n        for (var i = 0; i < hex.length; i += 2) {\n          bytes[i / 2] = parseInt(hex.slice(i, i + 2), 16);\n        }\n       var encoder = new base32.Encoder({ type: \"rfc4648\", lc: true });\n        return \"b\" + encoder.write(bytes).finalize();;\n      });\n}\n\nconst NFTIDSZ={\"MIME\":undefined,\"issHASH\":undefined,\"issCID2\":undefined,\"issCID1\":undefined,\"issCID0\":undefined,\"issPRK\":undefined,\"issPUBK\":undefined};\nvar NFTIDS={};\n\nfunction PUB2CID(issPUBK,IDS){\n  IDS.issPUBK=issPUBK;\n  return IDS;\n};\n\n\nasync function b64CID(msg,MIME){\n const data=Buffer.from(msg,\"base64\");\n var issHASH=sha256(data);\n  var HS = new Uint8Array(issHASH.length / 2);\n  for (var i = 0; i < issHASH.length; i += 2) {\n          HS[i / 2] = parseInt(issHASH.slice(i, i + 2), 16);\n    }\n  const issKeypair2 = nacl.sign.keyPair.fromSeed(HS);\n  var PB1=Buffer.from(issKeypair2.publicKey).toString('hex')\n  var issPUBK=getPUBFromStr(PB1);\n  var hex = \"01551220\" + issHASH;\n  var bytes = new Uint8Array(hex.length / 2);\n  for (var i = 0; i < hex.length; i += 2) {\n          bytes[i / 2] = parseInt(hex.slice(i, i + 2), 16);\n    }\n  const issCID1 = \"z\" + toBase58(bytes);\n  var encoder = new base32.Encoder({ type: \"rfc4648\", lc: true });\n  hex = \"01551220\" + issHASH;\n  bytes = new Uint8Array(hex.length / 2);\n        for (var i = 0; i < hex.length; i += 2) {\n          bytes[i / 2] = parseInt(hex.slice(i, i + 2), 16);\n        }\n  const issCID2 =  \"b\" + encoder.write(bytes).finalize();\n  return {\"MIME\":MIME,\"issHASH\":issHASH,\"issCID2\":issCID2,\"issCID1\":issCID1,\"issPUBK\":issPUBK};\n};\n\nwindow.b64CID=b64CID;\n"],"names":["root","factory","exports","module","define","amd","this","charmap","alphabet","mappings","split","forEach","c","i","rfc4648","crockford","O","I","L","base32hex","Decoder","options","buf","shift","carry","type","Error","Encoder","lc","toLowerCase","prototype","write","str","toUpperCase","char","symbol","push","finalize","byte","length","encode","decode","byteLength","b64","lens","getLens","validLen","placeHoldersLen","toByteArray","tmp","arr","Arr","_byteLength","curByte","len","revLookup","charCodeAt","fromByteArray","uint8","extraBytes","parts","maxChunkLength","len2","encodeChunk","lookup","join","Uint8Array","Array","code","indexOf","start","end","num","output","base64","ieee754","customInspectSymbol","Symbol","Buffer","K_MAX_LENGTH","createBuffer","RangeError","Object","setPrototypeOf","arg","encodingOrOffset","TypeError","allocUnsafe","from","value","string","encoding","isEncoding","actual","slice","fromString","ArrayBuffer","isView","arrayView","isInstance","copy","fromArrayBuffer","buffer","byteOffset","fromArrayLike","fromArrayView","SharedArrayBuffer","valueOf","b","obj","isBuffer","checked","undefined","numberIsNaN","isArray","data","fromObject","toPrimitive","assertSize","size","array","toString","mustMatch","arguments","loweredCase","utf8ToBytes","base64ToBytes","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","n","m","bidirectionalIndexOf","val","dir","arrayIndexOf","call","lastIndexOf","indexSize","arrLength","valLength","String","read","readUInt16BE","foundIndex","found","j","hexWrite","offset","Number","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","byteArray","asciiToBytes","base64Write","ucs2Write","units","hi","lo","utf16leToBytes","Math","min","res","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","apply","decodeCodePointsArray","TYPED_ARRAY_SUPPORT","proto","foo","e","typedArraySupport","console","error","defineProperty","enumerable","get","poolSize","alloc","fill","allocUnsafeSlow","_isBuffer","compare","a","x","y","concat","list","pos","set","swap16","swap32","swap64","toLocaleString","equals","inspect","max","replace","trim","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","_arr","ret","out","hexSliceLookupTable","bytes","checkOffset","ext","checkInt","wrtBigUInt64LE","checkIntBI","BigInt","wrtBigUInt64BE","checkIEEE754","writeFloat","littleEndian","noAssert","writeDouble","newBuf","subarray","readUintLE","readUIntLE","mul","readUintBE","readUIntBE","readUint8","readUInt8","readUint16LE","readUInt16LE","readUint16BE","readUint32LE","readUInt32LE","readUint32BE","readUInt32BE","readBigUInt64LE","defineBigIntMethod","validateNumber","first","last","boundsError","readBigUInt64BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readBigInt64LE","readBigInt64BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUintLE","writeUIntLE","writeUintBE","writeUIntBE","writeUint8","writeUInt8","writeUint16LE","writeUInt16LE","writeUint16BE","writeUInt16BE","writeUint32LE","writeUInt32LE","writeUint32BE","writeUInt32BE","writeBigUInt64LE","writeBigUInt64BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeBigInt64LE","writeBigInt64BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","copyWithin","errors","E","sym","getMessage","Base","constructor","super","writable","configurable","name","stack","message","addNumericalSeparator","range","ERR_OUT_OF_RANGE","checkBounds","ERR_INVALID_ARG_TYPE","floor","ERR_BUFFER_OUT_OF_BOUNDS","input","msg","received","isInteger","abs","INVALID_BASE64_RE","Infinity","leadSurrogate","base64clean","src","dst","table","i16","fn","BufferBigIntNotDefined","globals","convertHex","bytesToHex","map","orig","arrBytesToHex","hexToBytes","hex","match","convertString","bytesToString","stringToBytes","UTF8","decodeURIComponent","escape","unescape","encodeURIComponent","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","d","s","NaN","rt","isNaN","log","LN2","_imports","sha256","K","isPrime","sqrtN","sqrt","factor","getFractionalBits","nPrime","W","processBlock","H","M","f","g","h","gamma0x","gamma0","gamma1x","gamma1","maj","sigma0","t1","words","bytesToWords","l","digestbytes","wordsToBytes","asBytes","asString","x2","nacl","gf","init","r","Float64Array","randombytes","_0","_9","gf0","gf1","_121665","D","D2","X","Y","ts64","vn","xi","yi","crypto_verify_16","crypto_verify_32","crypto_core_salsa20","inp","k","o","p","u","j0","j1","j2","j3","j4","j5","j6","j7","j8","j9","j10","j11","j12","j13","j14","j15","x0","x1","x3","x4","x5","x6","x7","x8","x9","x10","x11","x12","x13","x14","x15","core_salsa20","crypto_core_hsalsa20","core_hsalsa20","sigma","crypto_stream_salsa20_xor","cpos","mpos","z","crypto_stream_salsa20","crypto_stream","sn","crypto_stream_xor","poly1305","key","t0","t2","t3","t4","t5","t6","t7","Uint16Array","pad","leftover","fin","crypto_onetimeauth","outpos","update","finish","crypto_onetimeauth_verify","hpos","crypto_secretbox","crypto_secretbox_open","set25519","car25519","v","sel25519","q","t","pack25519","neq25519","par25519","unpack25519","A","Z","t8","t9","t10","t11","t12","t13","t14","t15","t16","t17","t18","t19","t20","t21","t22","t23","t24","t25","t26","t27","t28","t29","t30","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","b10","b11","b12","b13","b14","b15","S","inv25519","pow2523","crypto_scalarmult","x32","x16","crypto_scalarmult_base","crypto_box_keypair","crypto_box_beforenm","blocks","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","hibit","h0","h1","h2","h3","h4","h5","h6","h7","h8","h9","r0","r1","r2","r3","r4","r5","r6","r7","r8","r9","mac","macpos","mask","want","crypto_box_afternm","crypto_box_open_afternm","crypto_hashblocks_hl","hh","hl","bh0","bh1","bh2","bh3","bh4","bh5","bh6","bh7","bl0","bl1","bl2","bl3","bl4","bl5","bl6","bl7","th","tl","wh","Int32Array","wl","ah0","ah1","ah2","ah3","ah4","ah5","ah6","ah7","al0","al1","al2","al3","al4","al5","al6","al7","crypto_hash","add","cswap","pack","tx","ty","zi","scalarmult","scalarbase","crypto_sign_keypair","pk","sk","seeded","modL","reduce","crypto_sign","sm","smlen","crypto_sign_open","chk","den","den2","den4","den6","unpackneg","crypto","crypto_sign_BYTES","crypto_sign_PUBLICKEYBYTES","crypto_sign_SECRETKEYBYTES","checkLengths","checkArrayTypes","cleanup","lowlevel","crypto_box","crypto_box_open","crypto_secretbox_KEYBYTES","crypto_secretbox_NONCEBYTES","crypto_secretbox_ZEROBYTES","crypto_secretbox_BOXZEROBYTES","crypto_scalarmult_BYTES","crypto_scalarmult_SCALARBYTES","crypto_box_PUBLICKEYBYTES","crypto_box_SECRETKEYBYTES","crypto_box_BEFORENMBYTES","crypto_box_NONCEBYTES","crypto_box_ZEROBYTES","crypto_box_BOXZEROBYTES","crypto_sign_SEEDBYTES","crypto_hash_BYTES","randomBytes","secretbox","nonce","open","box","keyLength","nonceLength","overheadLength","scalarMult","base","scalarLength","groupElementLength","publicKey","secretKey","before","checkBoxLengths","after","keyPair","fromSecretKey","publicKeyLength","secretKeyLength","sharedKeyLength","sign","signedMsg","mlen","detached","sig","verify","fromSeed","seed","seedLength","signatureLength","hash","hashLength","setPRNG","self","msCrypto","getRandomValues","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","toStringTag","base32","window","SLS32","b64CID","async","MIME","issHASH","HS","issKeypair2","issPUBK","bytes64","buff","zero","hashHex","hashBytes","crc","PCRC","addr","crc16s","result","next","bitsLeft","index","base32_encode","getPUBFromStr","issCID1","digits","reverse","digit","toBase58","encoder"],"sourceRoot":""}